{"version":3,"sources":["store.js","api.js","Nav.js","Users/List.js","Users/New.js","Feed.js","Events/New.js","App.js","reportWebVitals.js","index.js"],"names":["users","state","action","type","data","user_form","events","session","load_session","save_session","sess","Object","assign","time","Date","now","localStorage","setItem","JSON","stringify","getItem","parse","error","store","createStore","console","log","combineReducers","reducer","api_get","path","a","fetch","text","json","resp","api_post","opts","method","headers","body","fetch_users","then","dispatch","fetch_events","api_login","email","password","event","FormData","append","date","description","name","LoginForm","useState","setName","pass","setPass","Form","onSubmit","ev","preventDefault","inline","className","Control","onChange","target","value","Button","SessionInfo","connect","onClick","LoginOrInfo","Link","to","children","Nav","Item","exact","activeClassName","error_row","Row","Col","Alert","variant","Container","fluid","defaultActiveKey","rows","map","user","id","_state","history","useHistory","pass1","pass2","setUser","update","field","p1","p2","u1","pass_msg","length","create_user","pick","push","Group","Label","disabled","Event","xs","new_link","cards","EventsNew","setEvent","newEvent","create_event","updateDate","as","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8718db86.chunk.js","sourcesContent":["import { createStore, combineReducers } from 'redux';\n\nfunction users(state = [], action) {\n    switch (action.type) {\n      case 'users/set':\n        return action.data;\n      default:\n        return state;\n    }\n}\n\nfunction user_form(state = {}, action) {\n    switch (action.type) {\n      case 'user_form/set':\n        return action.data;\n      default:\n        return state\n    }\n}\n\nfunction events(state = [], action) {\n  switch (action.type) {\n    case 'events/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\nfunction session(state = load_session(), action) {\n  switch (action.type) {\n    case 'session/set':\n      save_session(action.data);\n      return action.data;\n    case 'session/clear':\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction save_session(sess) {\n  let session = Object.assign({}, sess, {time: Date.now()});\n  localStorage.setItem(\"session\", JSON.stringify(session));\n}\n\nfunction load_session() {\n  let session = localStorage.getItem(\"session\");\n  if (!session) {\n    return null;\n  }\n  session = JSON.parse(session);\n  let age = Date.now() - session.time;\n  let hours = 60*60*1000;\n  if (age < 24 * hours) {\n    return session;\n  }\n  else {\n    return null;\n  }\n}\n\nfunction error(state = null, action) {\n  switch (action.type) {\n    case 'error/set':\n      return action.data;\n    case 'session/set':\n      return null;\n    default:\n      return state;\n  }\n}\n\n\nfunction root_reducer(state, action) {\n    console.log(\"root_reducer\", state, action);\n    let reducer = combineReducers({\n        users, user_form, events, session, error\n    });\n    return reducer(state, action);\n}\n\nlet store = createStore(root_reducer);\nexport default store;\n","import store from './store';\n\nasync function api_get(path) {\n  let text = await fetch(\n    \"http://events-spa.teresewang.com:4000/api/v1\" + path, {});\n  let resp = await text.json();\n  return resp.data;\n}\n\nasync function api_post(path, data) {\n  let opts = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data),\n  };\n  let text = await fetch(\n    \"http://events-spa.teresewang.com:4000/api/v1\" + path, opts);\n  return await text.json();\n}\n\nexport function fetch_users() {\n  api_get(\"/users\").then((data) => {\n    let action = {\n      type: 'users/set',\n      data: data,\n    }\n    store.dispatch(action);\n  });\n}\n\nexport function fetch_events() {\n  api_get(\"/events\").then((data) => {\n    let action = {\n      type: 'events/set',\n      data: data,\n    }\n    store.dispatch(action);\n  });\n}\n\nexport function api_login(email, password) {\n  api_post(\"/session\", {email, password}).then((data) => {\n    console.log(\"login resp\", data);\n    if (data.session) {\n      let action = {\n        type: 'session/set',\n        data: data.session,\n      }\n      store.dispatch(action);\n    }\n    else if (data.error) {\n     let action = {\n        type: 'error/set',\n        data: data.error,\n      }\n      store.dispatch(action);\n    }\n  });\n}\n\nexport function create_user(user) {\n  return api_post(\"/users\", {user});\n}\n\nexport async function create_event(event){\n  let data = new FormData();\n  data.append(\"event[date]\", event.date)\n  data.append(\"event[description]\", event.description);\n  data.append(\"event[name]\", event.name);\n  fetch(\"http://events-spa.teresewang.com:4000/api/v1/events\", {\n    method: 'POST',\n    body: data,\n  }).then((resp) => {\n    console.log(resp);\n  });\n}\n\nexport function load_defaults() {\n  fetch_events();\n  fetch_users();\n}\n","import { Nav, Navbar, Row, Col, Form, Button ,Container, Alert } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { api_login } from './api';\n\nfunction LoginForm() {\n  const [email, setName] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n\n  function on_submit(ev) {\n    ev.preventDefault();\n    api_login(email, pass);\n  }\n\n  return (\n    <Form onSubmit={on_submit} inline>\n      <div className=\"mr-1 h5 mt-2 font-weight-bold text-light ml-5\">Email:</div>\n      <Form.Control name=\"email\"\n                    type=\"text\"\n                    onChange={(ev) => setName(ev.target.value)}\n                    value={email}\n                    className=\"ml-1 mr-1\"/>\n      <div className=\"mr-1 h5 mt-2 font-weight-bold text-light\">Password:</div>\n      <Form.Control name=\"password\"\n                    type=\"password\"\n                    onChange={(ev) => setPass(ev.target.value)}\n                    value={pass}\n                    className=\"ml-1\"/>\n      <Button className=\"h3 ml-1 mt-1 font-weight-bold\" type=\"submit\">\n        Logins\n      </Button>\n    </Form>\n  );\n}\n\nlet SessionInfo = connect()(({session, dispatch}) => {\n  function logout() {\n    dispatch({type: 'session/clear'});\n  }\n  return (\n    <div className=\"h4 mt-5 ml-5 font-weight-bold\">\n      Logged in as {session.email} &nbsp;\n      <Button onClick={logout}>Logout</Button>\n    </div>\n  );\n});\n\n\nfunction LOI({session}) {\n  if (session) {\n    return <SessionInfo session={session} />;\n  }\n  else {\n    return <LoginForm />;\n  }\n}\n\nconst LoginOrInfo = connect(\n  ({session}) => ({session}))(LOI);\n\nfunction Link({to, children}) {\n  return (\n    <Nav.Item>\n      <NavLink to={to} exact className=\"nav-link\"\n               activeClassName=\"active\">\n        {children}\n      </NavLink>\n    </Nav.Item>\n  );\n}\n\nfunction AppNav({error}) {\n  let error_row = null;\n\n  if (error) {\n    error_row = (\n      <Row>\n        <Col>\n          <Alert variant=\"danger\">{error}</Alert>\n        </Col>\n      </Row>\n    );\n  }\n  return (\n    <Container fluid className=\"bg-info\">\n      <Row>\n        <Col>\n          <Nav>\n            <h1 className=\"mr-5 display-1 font-weight-bold text-light\">HWZone</h1>\n            <LoginOrInfo />\n          </Nav>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Nav variant=\"tabs\" defaultActiveKey=\"/\" className=\"h3 font-weight-bold\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/users\">Users</Link>\n          </Nav>\n        </Col>\n      </Row>\n      { error_row }\n    </Container>\n  );\n}\n\nexport default connect(({error}) => ({error}))(AppNav);\n","import { Row, Col, Form, Button } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nfunction UsersList({users}) {\n  let rows = users.map((user) => (\n    <tr key={user.id}>\n      <td>{user.name}</td>\n      <td>\n        [ Edit ]\n      </td>\n    </tr>\n  ));\n\n  return (\n    <div>\n      <Row>\n        <Col>\n          <h2>List Users</h2>\n          <p>\n            <Link to=\"/users/new\">New User</Link>\n          </p>\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              { rows }\n            </tbody>\n          </table>\n        </Col>\n      </Row>\n    </div>\n  );\n\n}\n\nfunction state2props({users, user_form}) {\n  return { users, user_form };\n}\n\nexport default connect(state2props)(UsersList);\n","import { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_user, api_login, fetch_users } from '../api';\n\nfunction UsersNew() {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\", email: \"\", pass1: \"\", pass2: \"\",\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['name', 'email', 'password']);\n    create_user(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_users();\n          api_login(user['email'], user['password'])\n          history.push(\"/\");\n        }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    // This is for user experience only,\n    // validation logic goes on the server.\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Group>\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"name\", ev)}\n          value={user.name} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"email\", ev)}\n          value={user.email} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass1\", ev)}\n          value={user.pass1} />\n        <p>{user.pass_msg}</p>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass2\", ev)}\n          value={user.pass2} />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\"\n              disabled={user.pass_msg !== \"\"}>\n        Save\n      </Button>\n    </Form>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersNew);\n","import { Row, Col, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nfunction Event({event}) {\n  return(\n    <Col xs=\"12\">\n      <div className=\"card my-2\">\n        <div className=\"card-header font-weight-bold h4 text-primary\">{event.user.name}</div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title h1 mr-2 font-weight-bold text-info\">{event.name}</h5>\n          <h5 className=\"card-subtitle text-secondary mr-2 my-2\">{event.date}</h5>\n          <p className=\"card-text card-text font-weight-bold h4\">{event.description}</p>\n        </div>\n      </div>\n    </Col>\n  );\n}\n\nfunction Feed({events}) {\n  let cards = events.map((event) => (\n    <Event event={event} key={event.id} />\n  ));\n  let new_link = null;\n  new_link = (\n      <p><Link className=\"btn btn-lg btn-primary text-light font-weight-bold mt-4\" to=\"events/new\">New Event</Link></p>\n  )\n  return (\n      <div>\n      { new_link }\n      <Row className=\"my-4\">{cards}</Row>\n      </div>\n  );\n}\n\nexport default connect(({events}) => ({events}))(Feed);\n","import { Row, Col, Form, Button, FormControl, FormGroup } from 'react-bootstrap';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { create_event, fetch_events } from '../api';\nimport Datetime from 'react-datetime';\n\nexport default function EventsNew() {\n  let history = useHistory();\n  const [event, setEvent] = useState({\n    name: \"\",\n    date: \"\",\n    description: \"\"\n  });\n\n  function submit(ev) {\n    ev.preventDefault();\n    console.log(ev);\n    console.log(event);\n    create_event(event).then(() => {\n        history.push(\"/\");\n        fetch_events();\n    });\n  }\n\n  function update(field, ev) {\n    let newEvent = Object.assign({}, event);\n    newEvent[field] = ev.target.value;\n    setEvent(newEvent);\n  }\n\n  function updateDate(date) {\n    let newEvent = Object.assign({}, event);\n    newEvent[\"date\"] = date;\n    setEvent(newEvent);\n  }\n\n  return (\n    <Row>\n      <Col>\n        <Form onSubmit={submit}>\n          <Form.Group>\n            <Form.Label>Event Name</Form.Label>\n            <Form.Control type=\"text\"\n              onChange={\n                (ev) => update(\"name\", ev)}\n              value={event.name} />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Date</Form.Label>\n            <br></br>\n            <Datetime onChange={(date) => updateDate(date)} value={event.date} />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Description</Form.Label>\n            <Form.Control as=\"textarea\"\n                          rows={4}\n                          onChange={\n                            (ev) => update(\"description\", ev)\n                          }\n                          value={event.description} />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Create Event\n          </Button>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n","import { Container } from 'react-bootstrap';\nimport { Switch, Route } from 'react-router-dom';\n\nimport './App.scss';\nimport Nav from './Nav';\nimport UsersList from './Users/List';\nimport UsersNew from './Users/New';\nimport Feed from './Feed';\nimport EventsNew from './Events/New';\n\nfunction App() {\n  return (\n    <Container>\n      <Nav />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Feed />\n        </Route>\n        <Route path=\"/users\" exact>\n          <UsersList />\n        </Route>\n        <Route path=\"/users/new\">\n          <UsersNew />\n        </Route>\n        <Route path=\"/events/new\" exact>\n          <EventsNew />\n        </Route>\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\nimport { load_defaults } from \"./api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store= {store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nload_defaults();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
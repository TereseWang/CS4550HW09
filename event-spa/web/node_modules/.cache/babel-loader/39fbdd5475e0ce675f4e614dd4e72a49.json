{"ast":null,"code":"import _slicedToArray from\"/media/psf/Home/Desktop/event-spa/web-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Row,Col,Form,Button,FormControl,FormGroup}from'react-bootstrap';import{useState}from'react';import{useHistory}from'react-router-dom';import{create_event,fetch_events}from'../api';import Datetime from'react-datetime';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function EventsNew(){var history=useHistory();var _useState=useState({name:\"\",date:\"\",description:\"\"}),_useState2=_slicedToArray(_useState,2),event=_useState2[0],setEvent=_useState2[1];function submit(ev){ev.preventDefault();console.log(ev);console.log(event);create_event(event).then(function(){history.push(\"/\");fetch_events();});}function update(field,ev){var newEvent=Object.assign({},event);newEvent[field]=ev.target.value;setEvent(newEvent);}function updateDate(date){var newEvent=Object.assign({},event);newEvent[\"date\"]=date;setEvent(newEvent);}return/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:submit,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Event Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",onChange:function onChange(ev){return update(\"name\",ev);},value:event.name})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Date\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Datetime,{onChange:function onChange(date){return updateDate(date);},value:event.date})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Description\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:4,onChange:function onChange(ev){return update(\"description\",ev);},value:event.description})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Create Event\"})]})})});}","map":{"version":3,"sources":["/media/psf/Home/Desktop/event-spa/web-ui/src/Events/New.js"],"names":["Row","Col","Form","Button","FormControl","FormGroup","useState","useHistory","create_event","fetch_events","Datetime","EventsNew","history","name","date","description","event","setEvent","submit","ev","preventDefault","console","log","then","push","update","field","newEvent","Object","assign","target","value","updateDate"],"mappings":"+JAAA,OAASA,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,CAAyBC,MAAzB,CAAiCC,WAAjC,CAA8CC,SAA9C,KAA+D,iBAA/D,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,OAASC,YAAT,CAAuBC,YAAvB,KAA2C,QAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,C,wFAEA,cAAe,SAASC,CAAAA,SAAT,EAAqB,CAClC,GAAIC,CAAAA,OAAO,CAAGL,UAAU,EAAxB,CADkC,cAERD,QAAQ,CAAC,CACjCO,IAAI,CAAE,EAD2B,CAEjCC,IAAI,CAAE,EAF2B,CAGjCC,WAAW,CAAE,EAHoB,CAAD,CAFA,wCAE3BC,KAF2B,eAEpBC,QAFoB,eAQlC,QAASC,CAAAA,MAAT,CAAgBC,EAAhB,CAAoB,CAClBA,EAAE,CAACC,cAAH,GACAC,OAAO,CAACC,GAAR,CAAYH,EAAZ,EACAE,OAAO,CAACC,GAAR,CAAYN,KAAZ,EACAR,YAAY,CAACQ,KAAD,CAAZ,CAAoBO,IAApB,CAAyB,UAAM,CAC3BX,OAAO,CAACY,IAAR,CAAa,GAAb,EACAf,YAAY,GACf,CAHD,EAID,CAED,QAASgB,CAAAA,MAAT,CAAgBC,KAAhB,CAAuBP,EAAvB,CAA2B,CACzB,GAAIQ,CAAAA,QAAQ,CAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBb,KAAlB,CAAf,CACAW,QAAQ,CAACD,KAAD,CAAR,CAAkBP,EAAE,CAACW,MAAH,CAAUC,KAA5B,CACAd,QAAQ,CAACU,QAAD,CAAR,CACD,CAED,QAASK,CAAAA,UAAT,CAAoBlB,IAApB,CAA0B,CACxB,GAAIa,CAAAA,QAAQ,CAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBb,KAAlB,CAAf,CACAW,QAAQ,CAAC,MAAD,CAAR,CAAmBb,IAAnB,CACAG,QAAQ,CAACU,QAAD,CAAR,CACD,CAED,mBACE,KAAC,GAAD,wBACE,KAAC,GAAD,wBACE,MAAC,IAAD,EAAM,QAAQ,CAAET,MAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,yBACE,KAAC,IAAD,CAAM,KAAN,yBADF,cAEE,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CACE,QAAQ,CACN,kBAACC,EAAD,QAAQM,CAAAA,MAAM,CAAC,MAAD,CAASN,EAAT,CAAd,EAFJ,CAGE,KAAK,CAAEH,KAAK,CAACH,IAHf,EAFF,GADF,cASE,MAAC,IAAD,CAAM,KAAN,yBACE,KAAC,IAAD,CAAM,KAAN,mBADF,cAEE,aAFF,cAGE,KAAC,QAAD,EAAU,QAAQ,CAAE,kBAACC,IAAD,QAAUkB,CAAAA,UAAU,CAAClB,IAAD,CAApB,EAApB,CAAgD,KAAK,CAAEE,KAAK,CAACF,IAA7D,EAHF,GATF,cAeE,MAAC,IAAD,CAAM,KAAN,yBACE,KAAC,IAAD,CAAM,KAAN,0BADF,cAEE,KAAC,IAAD,CAAM,OAAN,EAAc,EAAE,CAAC,UAAjB,CACc,IAAI,CAAE,CADpB,CAEc,QAAQ,CACN,kBAACK,EAAD,QAAQM,CAAAA,MAAM,CAAC,aAAD,CAAgBN,EAAhB,CAAd,EAHhB,CAKc,KAAK,CAAEH,KAAK,CAACD,WAL3B,EAFF,GAfF,cAwBE,KAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,IAAI,CAAC,QAA/B,0BAxBF,GADF,EADF,EADF,CAkCD","sourcesContent":["import { Row, Col, Form, Button, FormControl, FormGroup } from 'react-bootstrap';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { create_event, fetch_events } from '../api';\nimport Datetime from 'react-datetime';\n\nexport default function EventsNew() {\n  let history = useHistory();\n  const [event, setEvent] = useState({\n    name: \"\",\n    date: \"\",\n    description: \"\"\n  });\n\n  function submit(ev) {\n    ev.preventDefault();\n    console.log(ev);\n    console.log(event);\n    create_event(event).then(() => {\n        history.push(\"/\");\n        fetch_events();\n    });\n  }\n\n  function update(field, ev) {\n    let newEvent = Object.assign({}, event);\n    newEvent[field] = ev.target.value;\n    setEvent(newEvent);\n  }\n\n  function updateDate(date) {\n    let newEvent = Object.assign({}, event);\n    newEvent[\"date\"] = date;\n    setEvent(newEvent);\n  }\n\n  return (\n    <Row>\n      <Col>\n        <Form onSubmit={submit}>\n          <Form.Group>\n            <Form.Label>Event Name</Form.Label>\n            <Form.Control type=\"text\"\n              onChange={\n                (ev) => update(\"name\", ev)}\n              value={event.name} />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Date</Form.Label>\n            <br></br>\n            <Datetime onChange={(date) => updateDate(date)} value={event.date} />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Description</Form.Label>\n            <Form.Control as=\"textarea\"\n                          rows={4}\n                          onChange={\n                            (ev) => update(\"description\", ev)\n                          }\n                          value={event.description} />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Create Event\n          </Button>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
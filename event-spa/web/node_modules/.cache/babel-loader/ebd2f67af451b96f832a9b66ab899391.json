{"ast":null,"code":"var _jsxFileName = \"/media/psf/Home/Desktop/event-spa/web-ui/src/Users/New.js\",\n    _s = $RefreshSig$();\n\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport { create_user, fetch_users } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsersNew() {\n  _s();\n\n  let history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    pass1: \"\",\n    pass2: \"\"\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['name', 'email', 'password']);\n    create_user(data).then(data => {\n      fetch_users();\n      history.push(\"/users\");\n    });\n  }\n\n  function check_pass(p1, p2) {\n    // This is for user experience only,\n    // validation logic goes on the server.\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        onChange: ev => update(\"name\", ev),\n        value: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        onChange: ev => update(\"email\", ev),\n        value: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        onChange: ev => update(\"pass1\", ev),\n        value: user.pass1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.pass_msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        onChange: ev => update(\"pass2\", ev),\n        value: user.pass2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      disabled: user.pass_msg !== \"\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UsersNew, \"zJLi7CxM49HVic4UUsPhjNFBcoQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = UsersNew;\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersNew);\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersNew\");","map":{"version":3,"sources":["/media/psf/Home/Desktop/event-spa/web-ui/src/Users/New.js"],"names":["Row","Col","Form","Button","connect","useState","useHistory","pick","create_user","fetch_users","UsersNew","history","user","setUser","name","email","pass1","pass2","onSubmit","ev","preventDefault","data","then","push","check_pass","p1","p2","length","update","field","u1","Object","assign","target","value","password","pass_msg","state2props","_state"],"mappings":"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","sourcesContent":["import { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pick from 'lodash/pick';\n\nimport { create_user, fetch_users } from '../api';\n\nfunction UsersNew() {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\", email: \"\", pass1: \"\", pass2: \"\",\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['name', 'email', 'password']);\n    create_user(data).then((data) => {\n      fetch_users();\n      history.push(\"/users\");\n    });\n  }\n\n  function check_pass(p1, p2) {\n    // This is for user experience only,\n    // validation logic goes on the server.\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Group>\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"name\", ev)}\n          value={user.name} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"email\", ev)}\n          value={user.email} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass1\", ev)}\n          value={user.pass1} />\n        <p>{user.pass_msg}</p>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass2\", ev)}\n          value={user.pass2} />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\"\n              disabled={user.pass_msg !== \"\"}>\n        Save\n      </Button>\n    </Form>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersNew);\n"]},"metadata":{},"sourceType":"module"}
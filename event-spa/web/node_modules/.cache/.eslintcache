[{"/media/psf/Home/Desktop/event-spa/web-ui/src/index.js":"1","/media/psf/Home/Desktop/event-spa/web-ui/src/reportWebVitals.js":"2","/media/psf/Home/Desktop/event-spa/web-ui/src/App.js":"3","/media/psf/Home/Desktop/event-spa/web-ui/src/store.js":"4","/media/psf/Home/Desktop/event-spa/web-ui/src/api.js":"5","/media/psf/Home/Desktop/event-spa/web-ui/src/Nav.js":"6","/media/psf/Home/Desktop/event-spa/web-ui/src/Feed.js":"7","/media/psf/Home/Desktop/event-spa/web-ui/src/Users/List.js":"8","/media/psf/Home/Desktop/event-spa/web-ui/src/Users/New.js":"9","/media/psf/Home/Desktop/event-spa/web-ui/src/Events/New.js":"10"},{"size":768,"mtime":1616806258000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1616779943000,"results":"13","hashOfConfig":"12"},{"size":716,"mtime":1616826612000,"results":"14","hashOfConfig":"12"},{"size":1705,"mtime":1616820861000,"results":"15","hashOfConfig":"12"},{"size":1806,"mtime":1616843324000,"results":"16","hashOfConfig":"12"},{"size":2672,"mtime":1616820412000,"results":"17","hashOfConfig":"12"},{"size":1093,"mtime":1616825898000,"results":"18","hashOfConfig":"12"},{"size":916,"mtime":1616823047000,"results":"19","hashOfConfig":"12"},{"size":2575,"mtime":1616823993000,"results":"20","hashOfConfig":"12"},{"size":1886,"mtime":1616836003000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kxwkxd",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/media/psf/Home/Desktop/event-spa/web-ui/src/index.js",[],"/media/psf/Home/Desktop/event-spa/web-ui/src/reportWebVitals.js",[],"/media/psf/Home/Desktop/event-spa/web-ui/src/App.js",[],"/media/psf/Home/Desktop/event-spa/web-ui/src/store.js",[],"/media/psf/Home/Desktop/event-spa/web-ui/src/api.js",[],"/media/psf/Home/Desktop/event-spa/web-ui/src/Nav.js",["47"],"import { Nav, Navbar, Row, Col, Form, Button ,Container, Alert } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { api_login } from './api';\n\nfunction LoginForm() {\n  const [email, setName] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n\n  function on_submit(ev) {\n    ev.preventDefault();\n    api_login(email, pass);\n  }\n\n  return (\n    <Form onSubmit={on_submit} inline>\n      <div className=\"mr-1 h5 mt-2 font-weight-bold text-light ml-5\">Email:</div>\n      <Form.Control name=\"email\"\n                    type=\"text\"\n                    onChange={(ev) => setName(ev.target.value)}\n                    value={email}\n                    className=\"ml-1 mr-1\"/>\n      <div className=\"mr-1 h5 mt-2 font-weight-bold text-light\">Password:</div>\n      <Form.Control name=\"password\"\n                    type=\"password\"\n                    onChange={(ev) => setPass(ev.target.value)}\n                    value={pass}\n                    className=\"ml-1\"/>\n      <Button className=\"h3 ml-1 mt-1 font-weight-bold\" type=\"submit\">\n        Logins\n      </Button>\n    </Form>\n  );\n}\n\nlet SessionInfo = connect()(({session, dispatch}) => {\n  function logout() {\n    dispatch({type: 'session/clear'});\n  }\n  return (\n    <div className=\"h4 mt-5 ml-5 font-weight-bold\">\n      Logged in as {session.email} &nbsp;\n      <Button onClick={logout}>Logout</Button>\n    </div>\n  );\n});\n\n\nfunction LOI({session}) {\n  if (session) {\n    return <SessionInfo session={session} />;\n  }\n  else {\n    return <LoginForm />;\n  }\n}\n\nconst LoginOrInfo = connect(\n  ({session}) => ({session}))(LOI);\n\nfunction Link({to, children}) {\n  return (\n    <Nav.Item>\n      <NavLink to={to} exact className=\"nav-link\"\n               activeClassName=\"active\">\n        {children}\n      </NavLink>\n    </Nav.Item>\n  );\n}\n\nfunction AppNav({error}) {\n  let error_row = null;\n\n  if (error) {\n    error_row = (\n      <Row>\n        <Col>\n          <Alert variant=\"danger\">{error}</Alert>\n        </Col>\n      </Row>\n    );\n  }\n  return (\n    <Container fluid className=\"bg-info\">\n      <Row>\n        <Col>\n          <Nav>\n            <h1 className=\"mr-5 display-1 font-weight-bold text-light\">HWZone</h1>\n            <LoginOrInfo />\n          </Nav>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Nav variant=\"tabs\" defaultActiveKey=\"/\" className=\"h3 font-weight-bold\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/users\">Users</Link>\n          </Nav>\n        </Col>\n      </Row>\n      { error_row }\n    </Container>\n  );\n}\n\nexport default connect(({error}) => ({error}))(AppNav);\n","/media/psf/Home/Desktop/event-spa/web-ui/src/Feed.js",["48"],"import { Row, Col, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nfunction Event({event}) {\n  return(\n    <Col xs=\"12\">\n      <div className=\"card my-2\">\n        <div className=\"card-header font-weight-bold h4 text-primary\">{event.user.name}</div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title h1 mr-2 font-weight-bold text-info\">{event.name}</h5>\n          <h5 className=\"card-subtitle text-secondary mr-2 my-2\">{event.date}</h5>\n          <p className=\"card-text card-text font-weight-bold h4\">{event.description}</p>\n        </div>\n      </div>\n    </Col>\n  );\n}\n\nfunction Feed({events}) {\n  let cards = events.map((event) => (\n    <Event event={event} key={event.id} />\n  ));\n  let new_link = null;\n  new_link = (\n      <p><Link className=\"btn btn-lg btn-primary text-light font-weight-bold mt-4\" to=\"events/new\">New Event</Link></p>\n  )\n  return (\n      <div>\n      { new_link }\n      <Row className=\"my-4\">{cards}</Row>\n      </div>\n  );\n}\n\nexport default connect(({events}) => ({events}))(Feed);\n","/media/psf/Home/Desktop/event-spa/web-ui/src/Users/List.js",["49","50"],"import { Row, Col, Form, Button } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nfunction UsersList({users}) {\n  let rows = users.map((user) => (\n    <tr key={user.id}>\n      <td>{user.name}</td>\n      <td>\n        [ Edit ]\n      </td>\n    </tr>\n  ));\n\n  return (\n    <div>\n      <Row>\n        <Col>\n          <h2>List Users</h2>\n          <p>\n            <Link to=\"/users/new\">New User</Link>\n          </p>\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              { rows }\n            </tbody>\n          </table>\n        </Col>\n      </Row>\n    </div>\n  );\n\n}\n\nfunction state2props({users, user_form}) {\n  return { users, user_form };\n}\n\nexport default connect(state2props)(UsersList);\n","/media/psf/Home/Desktop/event-spa/web-ui/src/Users/New.js",["51","52"],"import { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_user, api_login, fetch_users } from '../api';\n\nfunction UsersNew() {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\", email: \"\", pass1: \"\", pass2: \"\",\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['name', 'email', 'password']);\n    create_user(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_users();\n          api_login(user['email'], user['password'])\n          history.push(\"/\");\n        }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    // This is for user experience only,\n    // validation logic goes on the server.\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Group>\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"name\", ev)}\n          value={user.name} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"email\", ev)}\n          value={user.email} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass1\", ev)}\n          value={user.pass1} />\n        <p>{user.pass_msg}</p>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass2\", ev)}\n          value={user.pass2} />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\"\n              disabled={user.pass_msg !== \"\"}>\n        Save\n      </Button>\n    </Form>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersNew);\n","/media/psf/Home/Desktop/event-spa/web-ui/src/Events/New.js",["53","54"],"import { Row, Col, Form, Button, FormControl, FormGroup } from 'react-bootstrap';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { create_event, fetch_events } from '../api';\nimport Datetime from 'react-datetime';\n\nexport default function EventsNew() {\n  let history = useHistory();\n  const [event, setEvent] = useState({\n    name: \"\",\n    date: \"\",\n    description: \"\"\n  });\n\n  function submit(ev) {\n    ev.preventDefault();\n    console.log(ev);\n    console.log(event);\n    create_event(event).then(() => {\n        history.push(\"/\");\n        fetch_events();\n    });\n  }\n\n  function update(field, ev) {\n    let newEvent = Object.assign({}, event);\n    newEvent[field] = ev.target.value;\n    setEvent(newEvent);\n  }\n\n  function updateDate(date) {\n    let newEvent = Object.assign({}, event);\n    newEvent[\"date\"] = date;\n    setEvent(newEvent);\n  }\n\n  return (\n    <Row>\n      <Col>\n        <Form onSubmit={submit}>\n          <Form.Group>\n            <Form.Label>Event Name</Form.Label>\n            <Form.Control type=\"text\"\n              onChange={\n                (ev) => update(\"name\", ev)}\n              value={event.name} />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Date</Form.Label>\n            <br></br>\n            <Datetime onChange={(date) => updateDate(date)} value={event.date} />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Description</Form.Label>\n            <Form.Control as=\"textarea\"\n                          rows={4}\n                          onChange={\n                            (ev) => update(\"description\", ev)\n                          }\n                          value={event.description} />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Create Event\n          </Button>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n",{"ruleId":"55","severity":1,"message":"56","line":1,"column":15,"nodeType":"57","messageId":"58","endLine":1,"endColumn":21},{"ruleId":"55","severity":1,"message":"59","line":1,"column":20,"nodeType":"57","messageId":"58","endLine":1,"endColumn":24},{"ruleId":"55","severity":1,"message":"60","line":1,"column":20,"nodeType":"57","messageId":"58","endLine":1,"endColumn":24},{"ruleId":"55","severity":1,"message":"61","line":1,"column":26,"nodeType":"57","messageId":"58","endLine":1,"endColumn":32},{"ruleId":"55","severity":1,"message":"62","line":1,"column":10,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"55","severity":1,"message":"63","line":1,"column":15,"nodeType":"57","messageId":"58","endLine":1,"endColumn":18},{"ruleId":"55","severity":1,"message":"64","line":1,"column":34,"nodeType":"57","messageId":"58","endLine":1,"endColumn":45},{"ruleId":"55","severity":1,"message":"65","line":1,"column":47,"nodeType":"57","messageId":"58","endLine":1,"endColumn":56},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'FormControl' is defined but never used.","'FormGroup' is defined but never used."]
{"version":3,"sources":["store.js","api.js","Nav.js","User/New.js","User/View.js","User/Edit.js","Event/List.js","Event/View.js","Event/New.js","Event/Edit.js","App.js","reportWebVitals.js","index.js"],"names":["users","state","action","type","data","user_form","events","event_form","session","load_session","save_session","delete_session","sess","Object","assign","time","Date","now","localStorage","setItem","JSON","stringify","removeItem","getItem","parse","error","comments","invites","store","createStore","combineReducers","reducer","api_get","path","a","fetch","text","json","resp","opts","method","headers","body","fetch_users","then","dispatch","fetch_user","id","user","FormData","append","name","email","password","fetch_events","fetch_event","event","user_id","date","description","ok","fetch_comments","event_id","result","entries","value","push","comment","fetch_invites","response","invite_id","api_login","api_post","LoginForm","history","useHistory","useState","setName","pass","setPass","Form","onSubmit","ev","preventDefault","inline","Row","Col","className","Control","onChange","target","Button","to","SessionInfo","connect","current_user","link","onClick","LoginOrInfo","Link","children","Nav","Item","exact","activeClassName","Redirect","error_row","Alert","variant","LoginInRegister","defaultActiveKey","_state","pass1","pass2","setUser","update","field","p1","p2","u1","pass_msg","length","create_user","pick","Group","Label","disabled","View","reason","OtherUserView","UserForm","update_user","UpdateUserForm","AddNewEventButton","useLocation","UpdatingArticles","rows","map","i","contain_email","Card","fluid","Body","location","pathname","split","deleteEvent","delete_event","AddButtons","EditCommentButton","delete_comment","ListingComments","ListingInvites","your_response","score","Map","invite","setResponse","updateInvite","update_invite","setEmail","createInvite","new_email","replace","found","containEmail","create_invite","xs","controlId","as","com","setCom","create_comment","class","setEvent","create_event","newEvent","updateDate","dateFormat","timeFormat","inputProps","moment","format","update_event","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc75636c.chunk.js","sourcesContent":["import { createStore, combineReducers } from 'redux';\n//referenced the fetch Structure that store the value of the web from lecture\n//code SPA Structure from Nat Tuck CS4550 Northeastern University\n\nfunction users(state = [], action) {\n  switch (action.type) {\n    case 'users/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction user_form(state = {}, action) {\n  switch (action.type) {\n    case 'user_form/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction events(state=[], action) {\n  switch (action.type) {\n    case 'events/set':\n      return action.data;\n    default:\n      return state;\n    }\n}\n\nfunction event_form(state={}, action) {\n  switch (action.type) {\n    case 'event_form/set':\n      return action.data;\n    default:\n      return state;\n    }\n}\n\nfunction session(state = load_session(), action) {\n  switch (action.type) {\n    case 'session/set':\n      save_session(action.data);\n      return action.data;\n    case 'session/clear':\n      delete_session();\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction save_session(sess) {\n  let session = Object.assign({}, sess, {time: Date.now()});\n  localStorage.setItem(\"session\", JSON.stringify(session));\n}\n\nfunction delete_session() {\n  localStorage.removeItem(\"session\");\n}\n\nfunction load_session() {\n  let session = localStorage.getItem(\"session\");\n  if (!session) {\n    return null;\n  }\n  session = JSON.parse(session);\n  let age = Date.now() - session.time;\n  let hours = 60*60*1000;\n  if (age < 24 * hours) {\n    return session;\n  }\n  else {\n    return null;\n  }\n}\n\nfunction error(state = null, action) {\n  switch (action.type) {\n    case 'error/set':\n      return action.data;\n    case 'session/set':\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction comments(state=[], action) {\n  switch (action.type) {\n    case 'comments/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction invites(state=[], action) {\n  switch (action.type) {\n    case 'invites/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction root_reducer(state, action) {\n    let reducer = combineReducers({\n        invites, comments, events, event_form,\n        users, user_form, session, error,\n    });\n    return reducer(state, action);\n}\n\nlet store = createStore(root_reducer);\nexport default store;\n","import store from './store';\n\n//referenced from lecture code SPA Structure from Nat Tuck CS4550 Northeastern University\nasync function api_get(path) {\n  let text = await fetch(\n    \"http://localhost:4000/api/v1\" + path, {});\n  let resp = await text.json();\n  return resp.data;\n}\n\nasync function api_post(path, data) {\n  let opts = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data),\n  };\n  let text = await fetch(\n    \"http://localhost:4000/api/v1\" + path, opts);\n  return await text.json();\n}\n\nexport function fetch_users() {\n    api_get(\"/users\").then((data) => store.dispatch({\n        type: 'users/set',\n        data: data,\n    }));\n}\n\nexport function fetch_user(id) {\n  api_get(\"/users/\" + id).then((data) => store.dispatch({\n      type: 'user_form/set',\n      data: data,\n  }));\n}\n\nexport async function create_user(user) {\n  let data = new FormData();\n  data.append(\"user[name]\", user.name);\n  data.append(\"user[email]\", user.email);\n  data.append(\"user[password]\", user.password);\n  let resp = await fetch(\"http://localhost:4000/api/v1/users\", {\n    method: \"POST\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function update_user(user) {\n  let data = new FormData();\n  data.append(\"user_id\", user.id);\n  data.append(\"user[name]\", user.name);\n  data.append(\"user[email]\", user.email);\n  data.append(\"user[password]\", user.password);\n  let resp = await fetch(\"http://localhost:4000/api/v1/users/\" + user.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport function fetch_events() {\n  api_get(\"/events\").then((data) => {\n    store.dispatch({\n    type: 'events/set',\n    data: data,\n  })});\n}\n\nexport function fetch_event(id) {\n  api_get(\"/events/\"+id).then((data) => store.dispatch({\n    type: 'event_form/set',\n    data: data,\n  }));\n}\n\nexport async function create_event(event) {\n  let data = new FormData();\n  data.append(\"event[user_id]\", event.user_id);\n  data.append(\"event[date]\", JSON.stringify(event.date));\n  data.append(\"event[description]\", event.description);\n  data.append(\"event[name]\", event.name);\n  let resp = await fetch(\"http://localhost:4000/api/v1/events\", {\n    method: \"POST\",\n    body: data,\n  })\n  return await resp.json();\n}\n\n\nexport async function update_event(event) {\n  let data = new FormData();\n  data.append(\"event[user_id]\", event.user_id);\n  data.append(\"event[date]\", JSON.stringify(event.date));\n  data.append(\"event[description]\", event.description);\n  data.append(\"event[name]\", event.name);\n  let resp = await fetch(\"http://localhost:4000/api/v1/events/\" + event.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function delete_event(id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://localhost:4000/api/v1/events/\" + id, {\n    method: 'DELETE',\n    body: data,\n  }).then((resp) => {\n    if(!resp.ok){\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.',\n      };\n      store.dispatch(action);\n    }else {\n      fetch_events();\n    }\n  });\n}\n\n\nexport function fetch_comments(event_id) {\n  api_get(\"/comments\").then((data) => {\n    let result = []\n    for (let [key, value] of Object.entries(data)) {\n      if (value.event_id == event_id) {\n        result.push(value)\n      }\n    }\n    store.dispatch({\n    type: 'comments/set',\n    data: result,\n  })})\n}\n\nexport async function create_comment(comment, user_id, event_id) {\n  let data = new FormData();\n  data.append(\"comment[body]\", comment);\n  data.append(\"comment[event_id]\", event_id);\n  data.append(\"comment[user_id]\", user_id);\n  let resp = await fetch(\"http://localhost:4000/api/v1/comments\", {\n    method: \"POST\",\n    body: data,\n  })\n  return await resp.json();\n}\n\nexport async function delete_comment(id, event_id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://localhost:4000/api/v1/comments/\" + id, {\n    method: 'DELETE',\n    body: data,\n  }).then((resp) => {\n    if(!resp.ok){\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.',\n      };\n      store.dispatch(action);\n    }else {\n      fetch_comments(event_id);\n      fetch_events()\n    }\n  });\n}\n\nexport function fetch_invites(event_id) {\n  api_get(\"/invites\").then((data) => {\n    let result = []\n    for (let [key, value] of Object.entries(data)) {\n      if (value.event_id == event_id) {\n        result.push(value)\n      }\n    }\n    store.dispatch({\n    type: 'invites/set',\n    data: result,\n  })})\n}\n\nexport async function create_invite(email, event_id) {\n  let data = new FormData();\n  data.append(\"invite[email]\", email);\n  data.append(\"invite[event_id]\", event_id);\n  let resp = await fetch(\"http://localhost:4000/api/v1/invites\", {\n    method: \"POST\",\n    body: data,\n  })\n  return await resp.json();\n}\n\nexport async function update_invite(response, user_id, event_id, invite_id) {\n  let data = new FormData();\n  data.append(\"invite[response]\", response);\n  data.append(\"invite[user_id]\", user_id);\n  data.append(\"invite[event_id]\", event_id);\n  let resp = await fetch(\"http://localhost:4000/api/v1/invites/\" + invite_id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport function api_login(email, password) {\n  api_post(\"/session\", {email, password}).then((data) => {\n    if (data.session) {\n      let action = {\n        type: 'session/set',\n        data: data.session,\n      }\n      store.dispatch(action);\n    }\n    else if (data.error) {\n     let action = {\n        type: 'error/set',\n        data: data.error,\n      }\n      store.dispatch(action);\n    }\n  });\n}\n\nexport function load_defaults() {\n  fetch_users();\n  fetch_events();\n}\n","import { Nav, Navbar, Row, Col, Form, Button ,Container, Alert } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { fetch_events, api_login, fetch_user } from './api';\nimport { useHistory } from 'react-router-dom';\n\nfunction LoginForm() {\n  let history = useHistory();\n  const [email, setName] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n\n  function on_submit(ev) {\n    ev.preventDefault();\n    api_login(email, pass);\n    history.push(\"/\")\n  }\n\n  return (\n    <Form onSubmit={on_submit} inline>\n      <Row>\n        <Col>\n          <div className=\"h5 font-weight-bold text-dark\">Email:</div>\n          <Form.Control name=\"email\"\n                        type=\"text\"\n                        onChange={(ev) => setName(ev.target.value)}\n                        value={email}/>\n        </Col>\n      </Row>\n      <Row className=\"ml-2 my-2\">\n        <Col>\n          <div className=\"h5 font-weight-bold text-dark\">Password:</div>\n          <Form.Control name=\"password\"\n                        type=\"password\"\n                        onChange={(ev) => setPass(ev.target.value)}\n                        value={pass}/>\n          <Button className=\"h3 font-weight-bold ml-2 mr-2\" type=\"submit\">Logins </Button>\n        </Col>\n      </Row>\n      <div className=\"mt-4\">\n        <Redirect to=\"/users/new\">Register</Redirect>\n      </div>\n    </Form>\n  );\n}\n\nlet SessionInfo = connect()(({session, current_user,  dispatch}) => {\n  let history = useHistory();\n  function logout() {\n    dispatch({type: 'session/clear'});\n    history.push('/')\n  }\n  let link = \"/users/view/\" + session.user_id\n  return (\n      <Row className=\"h4 ml-1 font-weight-bold\">\n        <div className=\"my-2\">{session.name}</div>\n        <Button className=\"btn-danger h3 ml-2 font-weight-bold\" onClick={logout}>Logout</Button>\n        <Redirect to={link}>View Profile</Redirect>\n      </Row>\n  );\n});\n\nfunction LOI({session, current_user}) {\n  if (session) {\n    return <SessionInfo session={session} current_user={current_user} />;\n  }\n  else {\n    return <LoginForm />;\n  }\n}\n\nconst LoginOrInfo = connect(\n  ({session, current_user}) => ({session, current_user}))(LOI);\n\nfunction Link({to, children}) {\n  return (\n    <Nav.Item>\n      <NavLink to={to} exact\n        className=\"nav-link font-weight-bold text-dark\"\n        activeClassName=\"active\">\n        {children}\n      </NavLink>\n    </Nav.Item>\n  );\n}\n\nfunction Redirect({to, children}) {\n  return (\n    <Nav.Item>\n      <NavLink to={to} exact\n        className=\"btn font-weight-bold text-primary ml-2\"\n        activeClassName=\"active\">\n        {children}\n      </NavLink>\n    </Nav.Item>\n  );\n}\n\nfunction AppNav({error}) {\n  let error_row = null;\n\n  if (error) {\n    error_row = (\n      <Row>\n        <Col>\n          <Alert variant=\"danger\">{error}</Alert>\n        </Col>\n      </Row>\n    );\n  }\n  function Register({session}) {\n      return(\n        <Row>\n          <Nav variant=\"tabs\" defaultActiveKey=\"/users/new\">\n            <Link to=\"/\">HomePage</Link>\n          </Nav>\n      </Row>\n    )\n  }\n\n  const LoginInRegister = connect(\n    ({session}) => ({session}))(Register);\n\n  return(\n    <div>\n      <h1 className=\"font-weight-bold text-light display-2\">HWZone</h1>\n      <LoginOrInfo />\n      { error_row }\n      <LoginInRegister/>\n    </div>\n  );\n}\nexport default connect(({error}) => ({error}))(AppNav);\n","import { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_user, fetch_users, api_login, fetch_reason } from '../api';\n\n//referenced from lecture code SPA Structure from Nat Tuck CS4550 Northeastern University\nfunction UsersNew() {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\", pass1: \"\", pass2: \"\",\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['name', 'email', 'password']);\n    create_user(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_users();\n          api_login(user['email'], user['password'])\n          history.push(\"/\")\n        }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    // This is for user experience only,\n    // validation logic goes on the server.\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Group>\n        <h1 className=\"mt-5\">Register Acount</h1>\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"name\", ev)}\n          value={user.name} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"email\", ev)}\n          value={user.email} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass1\", ev)}\n          value={user.pass1} />\n        <p>{user.pass_msg}</p>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass2\", ev)}\n          value={user.pass2} />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold\"\n              disabled={user.pass_msg !== \"\"}>\n        Save\n      </Button>\n    </Form>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersNew);\n","import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { api_login, fetch_reason, fetch_user } from '../api';\n\nfunction UsersView() {\n  let history = useHistory();\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn btn-lg font-weight-bold text-light btn-info\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  function View({session}) {\n        return(\n        <Row>\n          <Col>\n            <h1 className=\"mt-3 my-3\">My Profile</h1>\n            <h3>Name: {session.name}</h3>\n            <h3>Email: {session.email}</h3>\n            <h3>Reason For Using This Website: {session.reason}</h3>\n            <Redirect to=\"/users/edit\">Edit Profile</Redirect>\n          </Col>\n        </Row>\n      )\n  }\n\n  function OtherUserView({current_user}) {\n    return <h1></h1>\n  }\n\n  function LoginView({session, current_user}) {\n    if (session) {\n      return <View session={session}/>\n    }\n    else {\n      return <OtherUserView current_user={current_user}/>\n    }\n  }\n\n  const LoginInRegister = connect(\n    ({session, current_user}) => ({session, current_user}))(LoginView);\n\n  return (\n    <div>\n      <LoginInRegister />\n    </div>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersView);\n","import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_user, fetch_users, api_login, fetch_reason } from '../api';\n\nfunction UserForm({session}) {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    id: session.user_id, name: session.name, email: session.email, pass1: \"\", pass2: \"\",\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['id', 'name', 'email', 'password']);\n    update_user(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_users();\n          api_login(user['email'], user['password'])\n          history.push(\"/users/view\")\n        }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn font-weight-bold text-light btn-danger\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Edit Profile</h1>\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"name\", ev)}\n            value={user.name} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"email\", ev)}\n            value={user.email} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>New Password</Form.Label>\n          <Form.Control type=\"password\"\n            onChange={\n              (ev) => update(\"pass1\", ev)}\n            value={user.pass1} />\n          <p>{user.pass_msg}</p>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control type=\"password\"\n            onChange={\n              (ev) => update(\"pass2\", ev)}\n            value={user.pass2} />\n        </Form.Group>\n        <Row className=\"ml-1\">\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\"\n                disabled={user.pass_msg !== \"\"}>\n          Save\n        </Button>\n        <Redirect to=\"/users/view\">Cancel</Redirect>\n        </Row>\n      </Form>\n    );\n  }\n\nfunction LoginEdit({session}) {\n  if(session) {\n    return <UserForm session={session}/>\n  }\n  else{\n    return <h1 className=\"mt-5 ml-5\">Please Login In To Edit</h1>\n  }\n}\n\nconst UpdateUserForm = connect(\n    ({session}) => ({session}))(LoginEdit);\n\nfunction UsersEdit() {\n  return (\n    <UpdateUserForm/>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersEdit);\n","import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { Link, useHistory, NavLink, useLocation } from 'react-router-dom';\nimport { fetch_invites, fetch_user, fetch_event, fetch_events} from '../api';\nimport Carousel from 'react-bootstrap/Carousel';\n\nfunction EventList({events, session}) {\n  let history = useHistory()\n  let location = useLocation();\n  function AddNewEventButton() {\n    if (session) {\n      return(\n        <Redirect to=\"/events/new\" className=\"btn btn-lg font-weight-bold btn-info ml-3\">\n          New Event\n        </Redirect>\n      )\n    }\n    else {\n      return(\n        <br></br>\n      )\n    }\n  }\n\n  function ListingArticles({session, event_form}) {\n    let rows = events.map((event) => {\n      const link = \"/events/view/\"+ event.id\n\n      function contain_email() {\n        for(var i = 0; i < event.invites.length; i++) {\n          if(event.invites[i].user_id == session.user_id) {\n            return true\n            break\n          }\n        }\n        return false\n      }\n\n      if (session) {\n        if (event.user_id == session.user_id || contain_email()) {\n          return (\n            <Card fluid className=\"my-4\">\n              <Card.Body>\n                <h1 className=\"\">{event.name}</h1>\n                <p>{event.description}</p>\n                <Link to={link}  className=\"text-danger\">Read More</Link>\n              </Card.Body>\n            </Card>\n          )\n        }\n        else {\n          return <div></div>\n        }\n      }\n      else {\n        return <div></div>\n      }\n    })\n\n    return(\n      <div className=\"ml-3\">\n        {rows}\n      </div>\n    )\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn btn-lg font-weight-bold text-light btn-info\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  const UpdatingArticles = connect(\n      ({session, event_form}) => ({session, event_form}))(ListingArticles);\n\n  return (\n    <div>\n      <Row className=\"mt-3\">\n        <Col>\n          <AddNewEventButton />\n        </Col>\n      </Row>\n      <UpdatingArticles />\n    </div>\n  );\n}\n\nfunction state2props({events, session}) {\n  return { events, session};\n}\n\nexport default connect(state2props)(EventList);\n","import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, useHistory, useLocation, NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { create_invite, update_invite, fetch_invites, create_comment, delete_comment, fetch_comments, delete_event, fetch_events, fetch_event, fetch_user} from '../api';\nimport store from '../store';\n\nfunction EventView({session, event_form, user_form, comments, invites}) {\n  let location = useLocation()\n  let history = useHistory()\n  let event_id = location.pathname.split(\"/events/view/\")[1]\n  if(typeof(comments) == \"undefined\" || (event_form.id) == \"undefined\" || event_form.id != event_id) {\n    fetch_events()\n    fetch_event(event_id)\n    fetch_comments(event_id)\n    fetch_invites(event_id)\n  }\n\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != event_form.user_id){\n    fetch_events()\n    fetch_user(event_form.user_id)\n  }\n\n  function deleteEvent() {\n    delete_event(event_id)\n    fetch_events()\n    history.push(\"/\")\n  }\n  function AddButtons() {\n    if(session && session.user_id == user_form.id) {\n      let link = \"/events/edit/\" + event_form.id\n      return(\n        <div>\n        <Link to={link} className=\"btn mt-2 btn-lg btn-info text-light mr-2 font-weight-bold\">Edit</Link>\n        <Button onClick={deleteEvent} className=\"btn mt-2 btn-lg btn-danger text-light mr-2 font-weight-bold\">Delete</Button>\n        <Link to=\"/\" className=\"btn btn-lg mt-2 btn-info text-light  font-weight-bold\">Back</Link>\n        </div>\n      )\n    }\n    else {\n      return(\n        <Link to=\"/\" className=\"btn btn-lg mt-2 btn-danger text-light  font-weight-bold\">Back</Link>\n      )\n    }\n  }\n\n  function EditCommentButton({comment}) {\n    function deleteComment() {\n      delete_comment(comment.id, event_id)\n    }\n\n    if (session && comment.user_id == session.user_id) {\n      return <Button onClick={deleteComment} className=\"btn mt-2 btn-danger text-light font-weight-bold\">Delete</Button>\n    }\n    else {\n      return <div></div>\n    }\n  }\n\n  function ListingComments() {\n    let rows = comments.map((comment) => {\n      return (\n        <Card fluid className=\"my-4\">\n          <Card.Body>\n            <h4 className=\"text-secondary\">{comment.user.name}</h4>\n            <h3 className=\"\">{comment.body}</h3>\n            <EditCommentButton comment={comment}/>\n          </Card.Body>\n        </Card>\n      )})\n      return <div>{rows}</div>\n  }\n\n  function ListingInvites() {\n    let score = new Map()\n    score[\"yes\"] = 0\n    score[\"no\"] = 0\n    score[\"maybe\"] = 0\n    var your_response;\n    var invite_id;\n    let rows = invites.map((invite) => {\n      if (invite.response == \"No\") {\n        score[\"no\"] = score[\"no\"] + 1\n      }\n      else if(invite.response == \"Yes\") {\n        score[\"yes\"] = score[\"yes\"] + 1\n      }\n      else {\n        score[\"maybe\"] = score[\"maybe\"] + 1\n      }\n\n      if (invite.user_id == session.user_id) {\n        your_response = invite.response;\n        invite_id = invite.id;\n      }\n      return(\n        <div>{invite.user.email} {invite.response}</div>\n      )\n    })\n\n    const [response, setResponse] = useState(your_response);\n\n    function updateInvite(ev) {\n      update_invite(response, session.user_id, event_form.id, invite_id).then((data) => {\n          if(data.error) {\n            let action={\n              type:\"error/set\",\n              data: data.error\n            }\n            store.dispatch(action)\n          }\n          else {\n            fetch_invites(event_id)\n            fetch_events()\n          }\n      });\n    }\n\n    const [email, setEmail] = useState(\"\");\n\n    function containEmail(email) {\n      var found = false\n      for(var i = 0; i < invites.length; i++) {\n        if(invites[i].user.email == email) {\n          found = true;\n          break\n        }\n      }\n      return found\n    }\n\n    function createInvite(ev) {\n      let new_email = email.replace(/\\s+/g, '');\n      if (new_email != session.email && !containEmail(new_email)) {\n          create_invite(new_email, event_id).then((data) => {\n              if(data.error) {\n                let action={\n                  type:\"error/set\",\n                  data: data.error\n                }\n                store.dispatch(action)\n              }\n              else {\n                fetch_invites(event_id)\n                fetch_events()\n              }\n          });\n      }\n      else {\n        setEmail(\"\")\n      }\n    }\n\n    if(session.user_id == user_form.id) {\n      let link = \"http://events-spa.teresewang.com/events/view/\" + event_id\n      return (\n        <div className=\"h3 mt-5\">\n          <Form  onSubmit={createInvite} className=\"my-3\">\n            <Form.Row>\n              <Col><h3>Invite</h3></Col>\n              <Col xs={9}>\n                <Form.Control type=\"text\" onChange={(ev) => setEmail(ev.target.value)}\n                  value={email} />\n              </Col>\n              <Col>\n                <Button onClick={(ev) => createInvite(ev)} className=\"btn btn-info text-light font-weight-bold\">Submit</Button>\n              </Col>\n            </Form.Row>\n          </Form>\n          <div className=\"text-danger my-4\">Copy Link: {link}</div>\n          <div>{rows}</div>\n          <div className=\"text-info\">Yes: {score[\"yes\"]} No: {score[\"no\"]} Maybe: {score[\"maybe\"]} </div>\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className=\"h3 mt-5\">\n          <Form onSubmit={updateInvite} inline>\n            <div className=\"text-info mr-5 mt-3 my-3\">Yes: {score[\"yes\"]} No: {score[\"no\"]} Maybe: {score[\"maybe\"]} </div>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Control as=\"select\" onChange={(ev) => setResponse(ev.target.value)} value={response}>\n              <option></option>\n              <option>Yes</option>\n              <option>No</option>\n              <option>Maybe</option>\n            </Form.Control>\n          </Form.Group>\n          <Button onClick={(ev) => updateInvite(ev)} className=\"btn btn-info text-light font-weight-bold\">Submit</Button>\n          </Form>\n          <div>{rows}</div>\n        </div>\n      )\n    }\n  }\n\n    const [com, setCom] = useState(\"\");\n\n    function onSubmit(ev) {\n      create_comment(com, session.user_id, event_id).then((data) => {\n          if(data.error) {\n            let action={\n              type:\"error/set\",\n              data: data.error\n            }\n            store.dispatch(action)\n          }\n          else {\n            setCom(\"\")\n            fetch_comments(event_id)\n            fetch_events()\n          }\n      });\n    }\n\n\n    if (session) {\n      return(\n        <div>\n          <AddButtons/>\n          <div class=\"row\">\n            <div class=\"col\">\n              <h1 className=\"display-3\">{event_form.name}</h1>\n              <h1 className=\"h4 text-secondary\">Posted By: {user_form.name}</h1>\n              <h1 className=\"h4 text-secondary\">{event_form.date}</h1>\n              <p className=\"h3 mt-2 text-dark\">{event_form.description}</p>\n              <ListingInvites />\n              <h1 className=\"text-dark mt-5\">Comments</h1>\n              <Form  onSubmit={onSubmit} className=\"my-3\">\n                <Form.Row>\n                  <Col><h3>{session.name}</h3></Col>\n                  <Col xs={9}>\n                    <Form.Control type=\"text\" onChange={(ev) => setCom(ev.target.value)}\n                      value={com} />\n                  </Col>\n                  <Col>\n                    <Button onClick={(ev) => onSubmit(ev)} className=\"btn btn-info text-light font-weight-bold\">Submit</Button>\n                  </Col>\n                </Form.Row>\n              </Form>\n              <ListingComments/>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else {\n      return(\n        <div className=\"display-3\">\n         Please Login to continue\n        </div>\n      )\n    }\n  }\n\nfunction state2props({session, event_form, user_form, comments, invites}) {\n  return {session, event_form, user_form, comments, invites};\n}\n\nexport default connect(state2props)(EventView);\n","import { Row, Col, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_event , fetch_events, fetch_users } from '../api';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\n\nfunction EventNew({session}) {\n  let history = useHistory();\n  const [event, setEvent] = useState({\n    user_id: \"\", name: \"\", description: \"\", date: \"\",\n    type: \"\"\n  })\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    event['user_id'] = session.user_id;\n    let data = pick(event, ['user_id', 'name', 'description', 'date']);\n    create_event(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_events()\n          fetch_users()\n          history.push(\"/\")\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, event);\n    u1[field] = ev.target.value;\n    setEvent(u1);\n  }\n\n  function updateDate(date) {\n    let newEvent = Object.assign({}, event);\n    newEvent[\"date\"] = date;\n    setEvent(newEvent);\n  }\n\n  if (session) {\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Create Event</h1>\n          <Form.Label>Event Name</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"name\", ev)}\n            value={event.name} />\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Date</Form.Label>\n            <br></br>\n            <Datetime\n              value={event.date}\n              onChange={(value) => updateDate(value)}\n              dateFormat=\"YYYY-MM-DD\"\n              timeFormat=\"HH:mm:SS\"\n              className=\"mb-4 max-width-300\"\n              inputProps={{\n              value: event.date\n              ? moment(event.date).format('MMMM D, YYYY   h:mm a')\n              : '',\n          }}\n        />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Event Description</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"description\", ev)}\n            value={event.description} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n      </Form>\n    );\n  }\n  else {\n    return <h1>Log in to create event</h1>\n  }\n}\n\nfunction state2props({session}) {\n  return {session};\n}\n\nexport default connect(state2props)(EventNew);\n","import { Row, Col, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink, useLocation } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_event , fetch_events, fetch_users, fetch_user, fetch_event} from '../api';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\n\nfunction EventEdit({session, user_form, event_form}) {\n  let history = useHistory();\n  let location = useLocation();\n  let event_id = location.pathname.split(\"/events/edit/\")[1]\n\n  if(typeof(event_form.id) == \"undefined\" || event_form.id != event_id) {\n    fetch_events()\n    fetch_event(event_id)\n  }\n\n  if(typeof(event_form.id) == \"undefined\" || user_form.id != event_form.user_id){\n    fetch_events()\n    fetch_user(event_form.user_id)\n  }\n\n  const [event, setEvent] = useState({\n    user_id: \"\", name: event_form.name, description: event_form.description, date: event_form.date, id: event_form.id\n  })\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    event['user_id'] = session.user_id;\n    let data = pick(event, ['user_id', 'name', 'description', 'date', 'id']);\n    update_event(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_events()\n          fetch_users()\n          fetch_event(event_id)\n          history.push(\"/events/view/\" + event_id)\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, event);\n    u1[field] = ev.target.value;\n    setEvent(u1);\n  }\n\n  function updateDate(date) {\n    let newEvent = Object.assign({}, event);\n    newEvent[\"date\"] = date;\n    setEvent(newEvent);\n  }\n\n  if(session) {\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Edit Event</h1>\n          <Form.Label>Event Name</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"name\", ev)}\n            value={event.name} />\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Date</Form.Label>\n            <br></br>\n            <Datetime\n              value={event.date}\n              onChange={(value) => updateDate(value)}\n              dateFormat=\"YYYY-MM-DD\"\n              timeFormat=\"HH:mm:SS\"\n              className=\"mb-4 max-width-300\"\n              inputProps={{\n              value: event.date\n              ? moment(event.date).format('MMMM D, YYYY   h:mm a')\n              : '',\n          }}\n        />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Event Description</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"description\", ev)}\n            value={event.description} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n      </Form>\n    );\n  }\n  else {\n    return <h1>Log in to edit</h1>\n  }\n}\n\nfunction state2props({session, user_form, event_form}) {\n  return {session, user_form, event_form};\n}\n\nexport default connect(state2props)(EventEdit);\n","import { Container } from 'react-bootstrap';\nimport { Switch, Route } from 'react-router-dom';\n\nimport './App.scss';\nimport Nav from './Nav';\nimport UsersNew from \"./User/New\";\nimport UsersView from \"./User/View\";\nimport UsersEdit from \"./User/Edit\";\nimport EventList from \"./Event/List\";\nimport EventView from \"./Event/View\";\nimport EventNew from \"./Event/New\";\nimport EventEdit from \"./Event/Edit\";\n\nfunction App() {\n  return (\n    <div>\n      <Container fluid className=\"bg\">\n        <Nav />\n        <Switch>\n        </Switch>\n      </Container>\n      <Container>\n        <Route path=\"/\" exact>\n          <EventList />\n        </Route>\n        <Route path=\"/events/view\">\n          <EventView />\n        </Route>\n        <Route path=\"/events/new\">\n          <EventNew />\n        </Route>\n        <Route path=\"/events/edit\">\n          <EventEdit />\n        </Route>\n        <Route path=\"/users/new\">\n          <UsersNew />\n        </Route>\n        <Route path=\"/users/view\">\n          <UsersView />\n        </Route>\n        <Route path=\"/users/edit\">\n          <UsersEdit />\n        </Route>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { load_defaults } from './api';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store= {store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nload_defaults();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
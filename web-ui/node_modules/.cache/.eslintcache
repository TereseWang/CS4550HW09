[{"/media/psf/Home/Desktop/CS4550HW09/web-ui/src/index.js":"1","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/App.js":"2","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/reportWebVitals.js":"3","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/store.js":"4","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/api.js":"5","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Nav.js":"6","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/User/View.js":"7","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/User/New.js":"8","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/User/Edit.js":"9","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/List.js":"10","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/View.js":"11","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/New.js":"12","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/Edit.js":"13"},{"size":765,"mtime":1619052680000,"results":"14","hashOfConfig":"15"},{"size":1152,"mtime":1619060508000,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1619048567000,"results":"17","hashOfConfig":"15"},{"size":2377,"mtime":1619066484000,"results":"18","hashOfConfig":"15"},{"size":5883,"mtime":1619092457000,"results":"19","hashOfConfig":"15"},{"size":3439,"mtime":1619079245000,"results":"20","hashOfConfig":"15"},{"size":1576,"mtime":1619054177000,"results":"21","hashOfConfig":"15"},{"size":2876,"mtime":1619088378000,"results":"22","hashOfConfig":"15"},{"size":3569,"mtime":1619054242000,"results":"23","hashOfConfig":"15"},{"size":2396,"mtime":1619086450000,"results":"24","hashOfConfig":"15"},{"size":8106,"mtime":1619088698000,"results":"25","hashOfConfig":"15"},{"size":2736,"mtime":1619088475000,"results":"26","hashOfConfig":"15"},{"size":3303,"mtime":1619088580000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j2fdyy",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"/media/psf/Home/Desktop/CS4550HW09/web-ui/src/index.js",[],"/media/psf/Home/Desktop/CS4550HW09/web-ui/src/App.js",[],"/media/psf/Home/Desktop/CS4550HW09/web-ui/src/reportWebVitals.js",[],"/media/psf/Home/Desktop/CS4550HW09/web-ui/src/store.js",[],"/media/psf/Home/Desktop/CS4550HW09/web-ui/src/api.js",["62","63","64","65"],"/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Nav.js",["66","67","68","69"],"import { Nav, Navbar, Row, Col, Form, Button ,Container, Alert } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { fetch_events, api_login, fetch_user } from './api';\nimport { useHistory } from 'react-router-dom';\n\nfunction LoginForm() {\n  let history = useHistory();\n  const [email, setName] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n\n  function on_submit(ev) {\n    ev.preventDefault();\n    api_login(email, pass);\n    history.push(\"/\")\n  }\n\n  return (\n    <Form onSubmit={on_submit} inline>\n      <Row>\n        <Col>\n          <div className=\"h5 font-weight-bold text-dark\">Email:</div>\n          <Form.Control name=\"email\"\n                        type=\"text\"\n                        onChange={(ev) => setName(ev.target.value)}\n                        value={email}/>\n        </Col>\n      </Row>\n      <Row className=\"ml-2 my-2\">\n        <Col>\n          <div className=\"h5 font-weight-bold text-dark\">Password:</div>\n          <Form.Control name=\"password\"\n                        type=\"password\"\n                        onChange={(ev) => setPass(ev.target.value)}\n                        value={pass}/>\n          <Button className=\"h3 font-weight-bold ml-2 mr-2\" type=\"submit\">Logins </Button>\n        </Col>\n      </Row>\n      <div className=\"mt-4\">\n        <Redirect to=\"/users/new\">Register</Redirect>\n      </div>\n    </Form>\n  );\n}\n\nlet SessionInfo = connect()(({session, current_user,  dispatch}) => {\n  let history = useHistory();\n  function logout() {\n    dispatch({type: 'session/clear'});\n    history.push('/')\n  }\n  let link = \"/users/view/\" + session.user_id\n  return (\n      <Row className=\"h4 ml-1 font-weight-bold\">\n        <div className=\"my-2\">{session.name}</div>\n        <Button className=\"btn-danger h3 ml-2 font-weight-bold\" onClick={logout}>Logout</Button>\n        <Redirect to={link}>View Profile</Redirect>\n      </Row>\n  );\n});\n\nfunction LOI({session, current_user}) {\n  if (session) {\n    return <SessionInfo session={session} current_user={current_user} />;\n  }\n  else {\n    return <LoginForm />;\n  }\n}\n\nconst LoginOrInfo = connect(\n  ({session, current_user}) => ({session, current_user}))(LOI);\n\nfunction Link({to, children}) {\n  return (\n    <Nav.Item>\n      <NavLink to={to} exact\n        className=\"nav-link font-weight-bold text-dark\"\n        activeClassName=\"active\">\n        {children}\n      </NavLink>\n    </Nav.Item>\n  );\n}\n\nfunction Redirect({to, children}) {\n  return (\n    <Nav.Item>\n      <NavLink to={to} exact\n        className=\"btn font-weight-bold text-primary ml-2\"\n        activeClassName=\"active\">\n        {children}\n      </NavLink>\n    </Nav.Item>\n  );\n}\n\nfunction AppNav({error}) {\n  let error_row = null;\n\n  if (error) {\n    error_row = (\n      <Row>\n        <Col>\n          <Alert variant=\"danger\">{error}</Alert>\n        </Col>\n      </Row>\n    );\n  }\n  function Register({session}) {\n      return(\n        <Row>\n          <Nav variant=\"tabs\" defaultActiveKey=\"/users/new\">\n            <Link to=\"/\">HomePage</Link>\n          </Nav>\n      </Row>\n    )\n  }\n\n  const LoginInRegister = connect(\n    ({session}) => ({session}))(Register);\n\n  return(\n    <div>\n      <h1 className=\"font-weight-bold text-light display-2\">HWZone</h1>\n      <LoginOrInfo />\n      { error_row }\n      <LoginInRegister/>\n    </div>\n  );\n}\nexport default connect(({error}) => ({error}))(AppNav);\n","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/User/View.js",["70","71","72","73","74","75","76","77","78","79","80"],"import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { api_login, fetch_reason, fetch_user } from '../api';\n\nfunction UsersView() {\n  let history = useHistory();\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn btn-lg font-weight-bold text-light btn-info\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  function View({session}) {\n        return(\n        <Row>\n          <Col>\n            <h1 className=\"mt-3 my-3\">My Profile</h1>\n            <h3>Name: {session.name}</h3>\n            <h3>Email: {session.email}</h3>\n            <h3>Reason For Using This Website: {session.reason}</h3>\n            <Redirect to=\"/users/edit\">Edit Profile</Redirect>\n          </Col>\n        </Row>\n      )\n  }\n\n  function OtherUserView({current_user}) {\n    return <h1></h1>\n  }\n\n  function LoginView({session, current_user}) {\n    if (session) {\n      return <View session={session}/>\n    }\n    else {\n      return <OtherUserView current_user={current_user}/>\n    }\n  }\n\n  const LoginInRegister = connect(\n    ({session, current_user}) => ({session, current_user}))(LoginView);\n\n  return (\n    <div>\n      <LoginInRegister />\n    </div>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersView);\n","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/User/New.js",["81","82","83","84"],"import { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_user, fetch_users, api_login, fetch_reason } from '../api';\n\n//referenced from lecture code SPA Structure from Nat Tuck CS4550 Northeastern University\nfunction UsersNew() {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\", pass1: \"\", pass2: \"\",\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['name', 'email', 'password']);\n    create_user(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_users();\n          api_login(user['email'], user['password'])\n          history.push(\"/\")\n        }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    // This is for user experience only,\n    // validation logic goes on the server.\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Group>\n        <h1 className=\"mt-5\">Register Acount</h1>\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"name\", ev)}\n          value={user.name} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"email\", ev)}\n          value={user.email} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass1\", ev)}\n          value={user.pass1} />\n        <p>{user.pass_msg}</p>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass2\", ev)}\n          value={user.pass2} />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold\"\n              disabled={user.pass_msg !== \"\"}>\n        Save\n      </Button>\n    </Form>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersNew);\n","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/User/Edit.js",["85","86","87","88"],"import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_user, fetch_users, api_login, fetch_reason } from '../api';\n\nfunction UserForm({session}) {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    id: session.user_id, name: session.name, email: session.email, pass1: \"\", pass2: \"\",\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['id', 'name', 'email', 'password']);\n    update_user(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_users();\n          api_login(user['email'], user['password'])\n          history.push(\"/users/view\")\n        }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn font-weight-bold text-light btn-danger\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Edit Profile</h1>\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"name\", ev)}\n            value={user.name} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"email\", ev)}\n            value={user.email} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>New Password</Form.Label>\n          <Form.Control type=\"password\"\n            onChange={\n              (ev) => update(\"pass1\", ev)}\n            value={user.pass1} />\n          <p>{user.pass_msg}</p>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control type=\"password\"\n            onChange={\n              (ev) => update(\"pass2\", ev)}\n            value={user.pass2} />\n        </Form.Group>\n        <Row className=\"ml-1\">\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\"\n                disabled={user.pass_msg !== \"\"}>\n          Save\n        </Button>\n        <Redirect to=\"/users/view\">Cancel</Redirect>\n        </Row>\n      </Form>\n    );\n  }\n\nfunction LoginEdit({session}) {\n  if(session) {\n    return <UserForm session={session}/>\n  }\n  else{\n    return <h1 className=\"mt-5 ml-5\">Please Login In To Edit</h1>\n  }\n}\n\nconst UpdateUserForm = connect(\n    ({session}) => ({session}))(LoginEdit);\n\nfunction UsersEdit() {\n  return (\n    <UpdateUserForm/>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersEdit);\n","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/List.js",["89","90","91","92","93","94","95","96","97","98","99","100","101","102"],"import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { Link, useHistory, NavLink, useLocation } from 'react-router-dom';\nimport { fetch_invites, fetch_user, fetch_event, fetch_events} from '../api';\nimport Carousel from 'react-bootstrap/Carousel';\n\nfunction EventList({events, session}) {\n  let history = useHistory()\n  let location = useLocation();\n  function AddNewEventButton() {\n    if (session) {\n      return(\n        <Redirect to=\"/events/new\" className=\"btn btn-lg font-weight-bold btn-info ml-3\">\n          New Event\n        </Redirect>\n      )\n    }\n    else {\n      return(\n        <br></br>\n      )\n    }\n  }\n\n  function ListingArticles({session, event_form}) {\n    let rows = events.map((event) => {\n      const link = \"/events/view/\"+ event.id\n\n      function contain_email() {\n        for(var i = 0; i < event.invites.length; i++) {\n          if(event.invites[i].user_id == session.user_id) {\n            return true\n            break\n          }\n        }\n        return false\n      }\n\n      if (session) {\n        if (event.user_id == session.user_id || contain_email()) {\n          return (\n            <Card fluid className=\"my-4\">\n              <Card.Body>\n                <h1 className=\"\">{event.name}</h1>\n                <p>{event.description}</p>\n                <Link to={link}  className=\"text-danger\">Read More</Link>\n              </Card.Body>\n            </Card>\n          )\n        }\n        else {\n          return <div></div>\n        }\n      }\n      else {\n        return <div></div>\n      }\n    })\n\n    return(\n      <div className=\"ml-3\">\n        {rows}\n      </div>\n    )\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn btn-lg font-weight-bold text-light btn-info\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  const UpdatingArticles = connect(\n      ({session, event_form}) => ({session, event_form}))(ListingArticles);\n\n  return (\n    <div>\n      <Row className=\"mt-3\">\n        <Col>\n          <AddNewEventButton />\n        </Col>\n      </Row>\n      <UpdatingArticles />\n    </div>\n  );\n}\n\nfunction state2props({events, session}) {\n  return { events, session};\n}\n\nexport default connect(state2props)(EventList);\n","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/View.js",["103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, useHistory, useLocation, NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { create_invite, update_invite, fetch_invites, create_comment, delete_comment, fetch_comments, delete_event, fetch_events, fetch_event, fetch_user} from '../api';\nimport store from '../store';\n\nfunction EventView({session, event_form, user_form, comments, invites}) {\n  let location = useLocation()\n  let history = useHistory()\n  let event_id = location.pathname.split(\"/events/view/\")[1]\n  if(typeof(comments) == \"undefined\" || (event_form.id) == \"undefined\" || event_form.id != event_id) {\n    fetch_events()\n    fetch_event(event_id)\n    fetch_comments(event_id)\n    fetch_invites(event_id)\n  }\n\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != event_form.user_id){\n    fetch_events()\n    fetch_user(event_form.user_id)\n  }\n\n  function deleteEvent() {\n    delete_event(event_id)\n    fetch_events()\n    history.push(\"/\")\n  }\n  function AddButtons() {\n    if(session && session.user_id == user_form.id) {\n      let link = \"/events/edit/\" + event_form.id\n      return(\n        <div>\n        <Link to={link} className=\"btn mt-2 btn-lg btn-info text-light mr-2 font-weight-bold\">Edit</Link>\n        <Button onClick={deleteEvent} className=\"btn mt-2 btn-lg btn-danger text-light mr-2 font-weight-bold\">Delete</Button>\n        <Link to=\"/\" className=\"btn btn-lg mt-2 btn-info text-light  font-weight-bold\">Back</Link>\n        </div>\n      )\n    }\n    else {\n      return(\n        <Link to=\"/\" className=\"btn btn-lg mt-2 btn-danger text-light  font-weight-bold\">Back</Link>\n      )\n    }\n  }\n\n  function EditCommentButton({comment}) {\n    function deleteComment() {\n      delete_comment(comment.id, event_id)\n    }\n\n    if (session && comment.user_id == session.user_id) {\n      return <Button onClick={deleteComment} className=\"btn mt-2 btn-danger text-light font-weight-bold\">Delete</Button>\n    }\n    else {\n      return <div></div>\n    }\n  }\n\n  function ListingComments() {\n    let rows = comments.map((comment) => {\n      return (\n        <Card fluid className=\"my-4\">\n          <Card.Body>\n            <h4 className=\"text-secondary\">{comment.user.name}</h4>\n            <h3 className=\"\">{comment.body}</h3>\n            <EditCommentButton comment={comment}/>\n          </Card.Body>\n        </Card>\n      )})\n      return <div>{rows}</div>\n  }\n\n  function ListingInvites() {\n    let score = new Map()\n    score[\"yes\"] = 0\n    score[\"no\"] = 0\n    score[\"maybe\"] = 0\n    var your_response;\n    var invite_id;\n    let rows = invites.map((invite) => {\n      if (invite.response == \"No\") {\n        score[\"no\"] = score[\"no\"] + 1\n      }\n      else if(invite.response == \"Yes\") {\n        score[\"yes\"] = score[\"yes\"] + 1\n      }\n      else {\n        score[\"maybe\"] = score[\"maybe\"] + 1\n      }\n\n      if (invite.user_id == session.user_id) {\n        your_response = invite.response;\n        invite_id = invite.id;\n      }\n      return(\n        <div>{invite.user.email} {invite.response}</div>\n      )\n    })\n\n    const [response, setResponse] = useState(your_response);\n\n    function updateInvite(ev) {\n      update_invite(response, session.user_id, event_form.id, invite_id).then((data) => {\n          if(data.error) {\n            let action={\n              type:\"error/set\",\n              data: data.error\n            }\n            store.dispatch(action)\n          }\n          else {\n            fetch_invites(event_id)\n            fetch_events()\n          }\n      });\n    }\n\n    const [email, setEmail] = useState(\"\");\n\n    function containEmail(email) {\n      var found = false\n      for(var i = 0; i < invites.length; i++) {\n        if(invites[i].user.email == email) {\n          found = true;\n          break\n        }\n      }\n      return found\n    }\n\n    function createInvite(ev) {\n      let new_email = email.replace(/\\s+/g, '');\n      if (new_email != session.email && !containEmail(new_email)) {\n          create_invite(new_email, event_id).then((data) => {\n              if(data.error) {\n                let action={\n                  type:\"error/set\",\n                  data: data.error\n                }\n                store.dispatch(action)\n              }\n              else {\n                fetch_invites(event_id)\n                fetch_events()\n              }\n          });\n      }\n      else {\n        setEmail(\"\")\n      }\n    }\n\n    if(session.user_id == user_form.id) {\n      let link = \"http://events-spa.teresewang.com/events/view/\" + event_id\n      return (\n        <div className=\"h3 mt-5\">\n          <Form  onSubmit={createInvite} className=\"my-3\">\n            <Form.Row>\n              <Col><h3>Invite</h3></Col>\n              <Col xs={9}>\n                <Form.Control type=\"text\" onChange={(ev) => setEmail(ev.target.value)}\n                  value={email} />\n              </Col>\n              <Col>\n                <Button onClick={(ev) => createInvite(ev)} className=\"btn btn-info text-light font-weight-bold\">Submit</Button>\n              </Col>\n            </Form.Row>\n          </Form>\n          <div className=\"text-danger my-4\">Copy Link: {link}</div>\n          <div>{rows}</div>\n          <div className=\"text-info\">Yes: {score[\"yes\"]} No: {score[\"no\"]} Maybe: {score[\"maybe\"]} </div>\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className=\"h3 mt-5\">\n          <Form onSubmit={updateInvite} inline>\n            <div className=\"text-info mr-5 mt-3 my-3\">Yes: {score[\"yes\"]} No: {score[\"no\"]} Maybe: {score[\"maybe\"]} </div>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Control as=\"select\" onChange={(ev) => setResponse(ev.target.value)} value={response}>\n              <option></option>\n              <option>Yes</option>\n              <option>No</option>\n              <option>Maybe</option>\n            </Form.Control>\n          </Form.Group>\n          <Button onClick={(ev) => updateInvite(ev)} className=\"btn btn-info text-light font-weight-bold\">Submit</Button>\n          </Form>\n          <div>{rows}</div>\n        </div>\n      )\n    }\n  }\n\n    const [com, setCom] = useState(\"\");\n\n    function onSubmit(ev) {\n      create_comment(com, session.user_id, event_id).then((data) => {\n          if(data.error) {\n            let action={\n              type:\"error/set\",\n              data: data.error\n            }\n            store.dispatch(action)\n          }\n          else {\n            setCom(\"\")\n            fetch_comments(event_id)\n            fetch_events()\n          }\n      });\n    }\n\n\n    if (session) {\n      return(\n        <div>\n          <AddButtons/>\n          <div class=\"row\">\n            <div class=\"col\">\n              <h1 className=\"display-3\">{event_form.name}</h1>\n              <h1 className=\"h4 text-secondary\">Posted By: {user_form.name}</h1>\n              <h1 className=\"h4 text-secondary\">{event_form.date}</h1>\n              <p className=\"h3 mt-2 text-dark\">{event_form.description}</p>\n              <ListingInvites />\n              <h1 className=\"text-dark mt-5\">Comments</h1>\n              <Form  onSubmit={onSubmit} className=\"my-3\">\n                <Form.Row>\n                  <Col><h3>{session.name}</h3></Col>\n                  <Col xs={9}>\n                    <Form.Control type=\"text\" onChange={(ev) => setCom(ev.target.value)}\n                      value={com} />\n                  </Col>\n                  <Col>\n                    <Button onClick={(ev) => onSubmit(ev)} className=\"btn btn-info text-light font-weight-bold\">Submit</Button>\n                  </Col>\n                </Form.Row>\n              </Form>\n              <ListingComments/>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else {\n      return(\n        <div className=\"display-3\">\n         Please Login to continue\n        </div>\n      )\n    }\n  }\n\nfunction state2props({session, event_form, user_form, comments, invites}) {\n  return {session, event_form, user_form, comments, invites};\n}\n\nexport default connect(state2props)(EventView);\n","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/New.js",["118","119","120"],"import { Row, Col, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_event , fetch_events, fetch_users } from '../api';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\n\nfunction EventNew({session}) {\n  let history = useHistory();\n  const [event, setEvent] = useState({\n    user_id: \"\", name: \"\", description: \"\", date: \"\",\n    type: \"\"\n  })\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    event['user_id'] = session.user_id;\n    let data = pick(event, ['user_id', 'name', 'description', 'date']);\n    create_event(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_events()\n          fetch_users()\n          history.push(\"/\")\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, event);\n    u1[field] = ev.target.value;\n    setEvent(u1);\n  }\n\n  function updateDate(date) {\n    let newEvent = Object.assign({}, event);\n    newEvent[\"date\"] = date;\n    setEvent(newEvent);\n  }\n\n  if (session) {\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Create Event</h1>\n          <Form.Label>Event Name</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"name\", ev)}\n            value={event.name} />\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Date</Form.Label>\n            <br></br>\n            <Datetime\n              value={event.date}\n              onChange={(value) => updateDate(value)}\n              dateFormat=\"YYYY-MM-DD\"\n              timeFormat=\"HH:mm:SS\"\n              className=\"mb-4 max-width-300\"\n              inputProps={{\n              value: event.date\n              ? moment(event.date).format('MMMM D, YYYY   h:mm a')\n              : '',\n          }}\n        />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Event Description</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"description\", ev)}\n            value={event.description} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n      </Form>\n    );\n  }\n  else {\n    return <h1>Log in to create event</h1>\n  }\n}\n\nfunction state2props({session}) {\n  return {session};\n}\n\nexport default connect(state2props)(EventNew);\n","/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/Edit.js",["121","122","123","124","125"],"import { Row, Col, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink, useLocation } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_event , fetch_events, fetch_users, fetch_user, fetch_event} from '../api';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\n\nfunction EventEdit({session, user_form, event_form}) {\n  let history = useHistory();\n  let location = useLocation();\n  let event_id = location.pathname.split(\"/events/edit/\")[1]\n\n  if(typeof(event_form.id) == \"undefined\" || event_form.id != event_id) {\n    fetch_events()\n    fetch_event(event_id)\n  }\n\n  if(typeof(event_form.id) == \"undefined\" || user_form.id != event_form.user_id){\n    fetch_events()\n    fetch_user(event_form.user_id)\n  }\n\n  const [event, setEvent] = useState({\n    user_id: \"\", name: event_form.name, description: event_form.description, date: event_form.date, id: event_form.id\n  })\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    event['user_id'] = session.user_id;\n    let data = pick(event, ['user_id', 'name', 'description', 'date', 'id']);\n    update_event(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_events()\n          fetch_users()\n          fetch_event(event_id)\n          history.push(\"/events/view/\" + event_id)\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, event);\n    u1[field] = ev.target.value;\n    setEvent(u1);\n  }\n\n  function updateDate(date) {\n    let newEvent = Object.assign({}, event);\n    newEvent[\"date\"] = date;\n    setEvent(newEvent);\n  }\n\n  if(session) {\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Edit Event</h1>\n          <Form.Label>Event Name</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"name\", ev)}\n            value={event.name} />\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Date</Form.Label>\n            <br></br>\n            <Datetime\n              value={event.date}\n              onChange={(value) => updateDate(value)}\n              dateFormat=\"YYYY-MM-DD\"\n              timeFormat=\"HH:mm:SS\"\n              className=\"mb-4 max-width-300\"\n              inputProps={{\n              value: event.date\n              ? moment(event.date).format('MMMM D, YYYY   h:mm a')\n              : '',\n          }}\n        />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Event Description</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"description\", ev)}\n            value={event.description} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n      </Form>\n    );\n  }\n  else {\n    return <h1>Log in to edit</h1>\n  }\n}\n\nfunction state2props({session, user_form, event_form}) {\n  return {session, user_form, event_form};\n}\n\nexport default connect(state2props)(EventEdit);\n",{"ruleId":"126","severity":1,"message":"127","line":128,"column":15,"nodeType":"128","messageId":"129","endLine":128,"endColumn":18},{"ruleId":"130","severity":1,"message":"131","line":129,"column":26,"nodeType":"132","messageId":"133","endLine":129,"endColumn":28},{"ruleId":"126","severity":1,"message":"127","line":174,"column":15,"nodeType":"128","messageId":"129","endLine":174,"endColumn":18},{"ruleId":"130","severity":1,"message":"131","line":175,"column":26,"nodeType":"132","messageId":"133","endLine":175,"endColumn":28},{"ruleId":"126","severity":1,"message":"134","line":1,"column":15,"nodeType":"128","messageId":"129","endLine":1,"endColumn":21},{"ruleId":"126","severity":1,"message":"135","line":1,"column":47,"nodeType":"128","messageId":"129","endLine":1,"endColumn":56},{"ruleId":"126","severity":1,"message":"136","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":22},{"ruleId":"126","severity":1,"message":"137","line":5,"column":35,"nodeType":"128","messageId":"129","endLine":5,"endColumn":45},{"ruleId":"126","severity":1,"message":"138","line":1,"column":15,"nodeType":"128","messageId":"129","endLine":1,"endColumn":21},{"ruleId":"126","severity":1,"message":"139","line":1,"column":33,"nodeType":"128","messageId":"129","endLine":1,"endColumn":37},{"ruleId":"126","severity":1,"message":"140","line":1,"column":39,"nodeType":"128","messageId":"129","endLine":1,"endColumn":45},{"ruleId":"126","severity":1,"message":"141","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":18},{"ruleId":"126","severity":1,"message":"142","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":12},{"ruleId":"126","severity":1,"message":"143","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":13},{"ruleId":"126","severity":1,"message":"144","line":7,"column":10,"nodeType":"128","messageId":"129","endLine":7,"endColumn":19},{"ruleId":"126","severity":1,"message":"145","line":7,"column":21,"nodeType":"128","messageId":"129","endLine":7,"endColumn":33},{"ruleId":"126","severity":1,"message":"137","line":7,"column":35,"nodeType":"128","messageId":"129","endLine":7,"endColumn":45},{"ruleId":"126","severity":1,"message":"146","line":10,"column":7,"nodeType":"128","messageId":"129","endLine":10,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":39,"column":12,"nodeType":"149","endLine":39,"endColumn":16},{"ruleId":"126","severity":1,"message":"150","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"151","line":1,"column":15,"nodeType":"128","messageId":"129","endLine":1,"endColumn":18},{"ruleId":"126","severity":1,"message":"145","line":7,"column":47,"nodeType":"128","messageId":"129","endLine":7,"endColumn":59},{"ruleId":"126","severity":1,"message":"152","line":57,"column":12,"nodeType":"128","messageId":"129","endLine":57,"endColumn":23},{"ruleId":"126","severity":1,"message":"138","line":1,"column":15,"nodeType":"128","messageId":"129","endLine":1,"endColumn":21},{"ruleId":"126","severity":1,"message":"151","line":1,"column":28,"nodeType":"128","messageId":"129","endLine":1,"endColumn":31},{"ruleId":"126","severity":1,"message":"145","line":7,"column":47,"nodeType":"128","messageId":"129","endLine":7,"endColumn":59},{"ruleId":"126","severity":1,"message":"152","line":54,"column":12,"nodeType":"128","messageId":"129","endLine":54,"endColumn":23},{"ruleId":"126","severity":1,"message":"140","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":16},{"ruleId":"126","severity":1,"message":"138","line":1,"column":23,"nodeType":"128","messageId":"129","endLine":1,"endColumn":29},{"ruleId":"126","severity":1,"message":"139","line":1,"column":47,"nodeType":"128","messageId":"129","endLine":1,"endColumn":51},{"ruleId":"126","severity":1,"message":"141","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":18},{"ruleId":"126","severity":1,"message":"153","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":23},{"ruleId":"126","severity":1,"message":"137","line":5,"column":25,"nodeType":"128","messageId":"129","endLine":5,"endColumn":35},{"ruleId":"126","severity":1,"message":"154","line":5,"column":37,"nodeType":"128","messageId":"129","endLine":5,"endColumn":48},{"ruleId":"126","severity":1,"message":"136","line":5,"column":50,"nodeType":"128","messageId":"129","endLine":5,"endColumn":62},{"ruleId":"126","severity":1,"message":"155","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":16},{"ruleId":"126","severity":1,"message":"146","line":9,"column":7,"nodeType":"128","messageId":"129","endLine":9,"endColumn":14},{"ruleId":"126","severity":1,"message":"156","line":10,"column":7,"nodeType":"128","messageId":"129","endLine":10,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":32,"column":39,"nodeType":"132","messageId":"133","endLine":32,"endColumn":41},{"ruleId":"157","severity":1,"message":"158","line":34,"column":13,"nodeType":"159","messageId":"160","endLine":34,"endColumn":18},{"ruleId":"130","severity":1,"message":"131","line":41,"column":27,"nodeType":"132","messageId":"133","endLine":41,"endColumn":29},{"ruleId":"126","severity":1,"message":"161","line":1,"column":18,"nodeType":"128","messageId":"129","endLine":1,"endColumn":21},{"ruleId":"126","severity":1,"message":"138","line":1,"column":23,"nodeType":"128","messageId":"129","endLine":1,"endColumn":29},{"ruleId":"126","severity":1,"message":"150","line":1,"column":31,"nodeType":"128","messageId":"129","endLine":1,"endColumn":34},{"ruleId":"126","severity":1,"message":"162","line":3,"column":41,"nodeType":"128","messageId":"129","endLine":3,"endColumn":48},{"ruleId":"130","severity":1,"message":"131","line":12,"column":57,"nodeType":"132","messageId":"133","endLine":12,"endColumn":59},{"ruleId":"130","severity":1,"message":"163","line":12,"column":89,"nodeType":"132","messageId":"133","endLine":12,"endColumn":91},{"ruleId":"130","severity":1,"message":"163","line":19,"column":58,"nodeType":"132","messageId":"133","endLine":19,"endColumn":60},{"ruleId":"130","severity":1,"message":"131","line":30,"column":35,"nodeType":"132","messageId":"133","endLine":30,"endColumn":37},{"ruleId":"130","severity":1,"message":"131","line":52,"column":36,"nodeType":"132","messageId":"133","endLine":52,"endColumn":38},{"ruleId":"130","severity":1,"message":"131","line":82,"column":27,"nodeType":"132","messageId":"133","endLine":82,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":85,"column":31,"nodeType":"132","messageId":"133","endLine":85,"endColumn":33},{"ruleId":"130","severity":1,"message":"131","line":92,"column":26,"nodeType":"132","messageId":"133","endLine":92,"endColumn":28},{"ruleId":"130","severity":1,"message":"131","line":124,"column":34,"nodeType":"132","messageId":"133","endLine":124,"endColumn":36},{"ruleId":"130","severity":1,"message":"163","line":134,"column":21,"nodeType":"132","messageId":"133","endLine":134,"endColumn":23},{"ruleId":"130","severity":1,"message":"131","line":154,"column":24,"nodeType":"132","messageId":"133","endLine":154,"endColumn":26},{"ruleId":"126","severity":1,"message":"150","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"151","line":1,"column":15,"nodeType":"128","messageId":"129","endLine":1,"endColumn":18},{"ruleId":"126","severity":1,"message":"162","line":4,"column":22,"nodeType":"128","messageId":"129","endLine":4,"endColumn":29},{"ruleId":"126","severity":1,"message":"150","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"151","line":1,"column":15,"nodeType":"128","messageId":"129","endLine":1,"endColumn":18},{"ruleId":"126","severity":1,"message":"162","line":4,"column":22,"nodeType":"128","messageId":"129","endLine":4,"endColumn":29},{"ruleId":"130","severity":1,"message":"163","line":16,"column":60,"nodeType":"132","messageId":"133","endLine":16,"endColumn":62},{"ruleId":"130","severity":1,"message":"163","line":21,"column":59,"nodeType":"132","messageId":"133","endLine":21,"endColumn":61},"no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Navbar' is defined but never used.","'Container' is defined but never used.","'fetch_events' is defined but never used.","'fetch_user' is defined but never used.","'NavRow' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'pick' is defined but never used.","'store' is defined but never used.","'api_login' is defined but never used.","'fetch_reason' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Row' is defined but never used.","'Col' is defined but never used.","'updatePhoto' is defined but never used.","'fetch_invites' is defined but never used.","'fetch_event' is defined but never used.","'Carousel' is defined but never used.","'location' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Nav' is defined but never used.","'NavLink' is defined but never used.","Expected '!==' and instead saw '!='."]
{"ast":null,"code":"var _jsxFileName = \"/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/View.js\",\n    _s2 = $RefreshSig$();\n\nimport { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, useHistory, useLocation, NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { create_invite, update_invite, fetch_invites, create_comment, delete_comment, fetch_comments, delete_event, fetch_events, fetch_event, fetch_user } from '../api';\nimport store from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventView({\n  session,\n  event_form,\n  user_form,\n  comments,\n  invites\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let location = useLocation();\n  let history = useHistory();\n  let event_id = location.pathname.split(\"/events/view/\")[1];\n\n  if (typeof comments == \"undefined\" || event_form.id == \"undefined\" || event_form.id != event_id) {\n    fetch_events();\n    fetch_event(event_id);\n    fetch_comments(event_id);\n    fetch_invites(event_id);\n  }\n\n  if (typeof user_form.id == \"undefined\" || user_form.id != event_form.user_id) {\n    fetch_events();\n    fetch_user(event_form.user_id);\n  }\n\n  function deleteEvent() {\n    delete_event(event_id);\n    fetch_events();\n    history.push(\"/\");\n  }\n\n  function AddButtons() {\n    if (session && session.user_id == user_form.id) {\n      let link = \"/events/edit/\" + event_form.id;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: link,\n          className: \"btn mt-2 btn-lg btn-info text-light mr-2 font-weight-bold\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: deleteEvent,\n          className: \"btn mt-2 btn-lg btn-danger text-light mr-2 font-weight-bold\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"btn btn-lg mt-2 btn-info text-light  font-weight-bold\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn btn-lg mt-2 btn-danger text-light  font-weight-bold\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function EditCommentButton({\n    comment\n  }) {\n    function deleteComment() {\n      delete_comment(comment.id, event_id);\n    }\n\n    if (session && comment.user_id == session.user_id) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        onClick: deleteComment,\n        className: \"btn mt-2 btn-danger text-light font-weight-bold\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  function ListingComments() {\n    let rows = comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        fluid: true,\n        className: \"my-4\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-secondary\",\n            children: comment.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"\",\n            children: comment.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditCommentButton, {\n            comment: comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }, this);\n  }\n\n  function ListingInvites() {\n    _s();\n\n    let score = new Map();\n    score[\"yes\"] = 0;\n    score[\"no\"] = 0;\n    score[\"maybe\"] = 0;\n    var your_response;\n    var invite_id;\n    let rows = invites.map(invite => {\n      if (invite.response == \"No\") {\n        score[\"no\"] = score[\"no\"] + 1;\n      } else if (invite.response == \"Yes\") {\n        score[\"yes\"] = score[\"yes\"] + 1;\n      } else {\n        score[\"maybe\"] = score[\"maybe\"] + 1;\n      }\n\n      if (invite.user_id == session.user_id) {\n        your_response = invite.response;\n        invite_id = invite.id;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: invite.user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this);\n    });\n    const [response, setResponse] = useState(your_response);\n\n    function updateInvite(ev) {\n      update_invite(response, session.user_id, event_form.id, invite_id).then(data => {\n        if (data.error) {\n          let action = {\n            type: \"error/set\",\n            data: data.error\n          };\n          store.dispatch(action);\n        } else {\n          fetch_invites(event_id);\n          fetch_events();\n        }\n      });\n    }\n\n    const [email, setEmail] = useState(\"\");\n\n    function containEmail(email) {\n      var found = false;\n\n      for (var i = 0; i < invites.length; i++) {\n        if (invites[i].user.email == email) {\n          found = true;\n          break;\n        }\n      }\n\n      return found;\n    }\n\n    function createInvite(ev) {\n      if (email != session.email && !containEmail(email)) {\n        create_invite(email, event_id).then(data => {\n          if (data.error) {\n            let action = {\n              type: \"error/set\",\n              data: data.error\n            };\n            store.dispatch(action);\n          } else {\n            fetch_invites(event_id);\n            fetch_events();\n          }\n        });\n      } else {\n        setEmail(\"\");\n      }\n    }\n\n    if (session.user_id == user_form.id) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h3 mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: createInvite,\n          className: \"my-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Invite\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                onChange: ev => setEmail(ev.target.value),\n                value: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: ev => createInvite(ev),\n                className: \"btn btn-info text-light font-weight-bold\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-info\",\n          children: [\"Yes: \", score[\"yes\"], \" No: \", score[\"no\"], \" Maybe: \", score[\"maybe\"], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h3 mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: updateInvite,\n          inline: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-info mr-5 mt-3 my-3\",\n            children: [\"Yes: \", score[\"yes\"], \" No: \", score[\"no\"], \" Maybe: \", score[\"maybe\"], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlSelect1\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              onChange: ev => setResponse(ev.target.value),\n              value: response,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Maybe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: ev => updateInvite(ev),\n            className: \"btn btn-info text-light font-weight-bold\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  _s(ListingInvites, \"7oiuClKxTV3++zvRLwG0bekYsCI=\");\n\n  const [com, setCom] = useState(\"\");\n\n  function onSubmit(ev) {\n    create_comment(com, session.user_id, event_id).then(data => {\n      if (data.error) {\n        let action = {\n          type: \"error/set\",\n          data: data.error\n        };\n        store.dispatch(action);\n      } else {\n        setCom(\"\");\n        fetch_comments(event_id);\n        fetch_events();\n      }\n    });\n  }\n\n  if (session) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"display-3\",\n            children: event_form.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h4 text-secondary\",\n            children: [\"Posted By: \", user_form.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h4 text-secondary\",\n            children: event_form.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"h3 mt-2 text-dark\",\n            children: event_form.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListingInvites, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-dark mt-5\",\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: onSubmit,\n            className: \"my-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: session.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: 10,\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  onChange: ev => setCom(ev.target.value),\n                  value: com\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: ev => onSubmit(ev),\n                  className: \"btn btn-info text-light font-weight-bold\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListingComments, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h4 text-secondary\",\n        children: [\"Posted by: \", user_form.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"display-3\",\n            children: event_form.brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h3\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"h5 mt-2 text-danger\",\n            children: [event_form.price, \"$ per Lbs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h3\",\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"h5 mt-2 text-secondary\",\n            children: event_form.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h3\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"h5 mt-2 text-secondary\",\n            children: event_form.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListingComments, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s2(EventView, \"0NnIwho+b5UezPycSHOVFag9NeQ=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = EventView;\n\nfunction state2props({\n  session,\n  event_form,\n  user_form,\n  comments,\n  invites\n}) {\n  return {\n    session,\n    event_form,\n    user_form,\n    comments,\n    invites\n  };\n}\n\nexport default connect(state2props)(EventView);\n\nvar _c;\n\n$RefreshReg$(_c, \"EventView\");","map":{"version":3,"sources":["/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/View.js"],"names":["Button","Nav","NavRow","Row","Col","Card","Form","connect","Link","useHistory","useLocation","NavLink","useState","create_invite","update_invite","fetch_invites","create_comment","delete_comment","fetch_comments","delete_event","fetch_events","fetch_event","fetch_user","store","EventView","session","event_form","user_form","comments","invites","location","history","event_id","pathname","split","id","user_id","deleteEvent","push","AddButtons","link","EditCommentButton","comment","deleteComment","ListingComments","rows","map","user","name","body","ListingInvites","score","Map","your_response","invite_id","invite","response","email","setResponse","updateInvite","ev","then","data","error","action","type","dispatch","setEmail","containEmail","found","i","length","createInvite","target","value","com","setCom","onSubmit","date","description","brand","price","state2props"],"mappings":"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","sourcesContent":["import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, useHistory, useLocation, NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { create_invite, update_invite, fetch_invites, create_comment, delete_comment, fetch_comments, delete_event, fetch_events, fetch_event, fetch_user} from '../api';\nimport store from '../store';\n\nfunction EventView({session, event_form, user_form, comments, invites}) {\n  let location = useLocation()\n  let history = useHistory()\n  let event_id = location.pathname.split(\"/events/view/\")[1]\n  if(typeof(comments) == \"undefined\" || (event_form.id) == \"undefined\" || event_form.id != event_id) {\n    fetch_events()\n    fetch_event(event_id)\n    fetch_comments(event_id)\n    fetch_invites(event_id)\n  }\n\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != event_form.user_id){\n    fetch_events()\n    fetch_user(event_form.user_id)\n  }\n\n  function deleteEvent() {\n    delete_event(event_id)\n    fetch_events()\n    history.push(\"/\")\n  }\n  function AddButtons() {\n    if(session && session.user_id == user_form.id) {\n      let link = \"/events/edit/\" + event_form.id\n      return(\n        <div>\n        <Link to={link} className=\"btn mt-2 btn-lg btn-info text-light mr-2 font-weight-bold\">Edit</Link>\n        <Button onClick={deleteEvent} className=\"btn mt-2 btn-lg btn-danger text-light mr-2 font-weight-bold\">Delete</Button>\n        <Link to=\"/\" className=\"btn btn-lg mt-2 btn-info text-light  font-weight-bold\">Back</Link>\n        </div>\n      )\n    }\n    else {\n      return(\n        <Link to=\"/\" className=\"btn btn-lg mt-2 btn-danger text-light  font-weight-bold\">Back</Link>\n      )\n    }\n  }\n\n  function EditCommentButton({comment}) {\n    function deleteComment() {\n      delete_comment(comment.id, event_id)\n    }\n\n    if (session && comment.user_id == session.user_id) {\n      return <Button onClick={deleteComment} className=\"btn mt-2 btn-danger text-light font-weight-bold\">Delete</Button>\n    }\n    else {\n      return <div></div>\n    }\n  }\n\n  function ListingComments() {\n    let rows = comments.map((comment) => {\n      return (\n        <Card fluid className=\"my-4\">\n          <Card.Body>\n            <h4 className=\"text-secondary\">{comment.user.name}</h4>\n            <h3 className=\"\">{comment.body}</h3>\n            <EditCommentButton comment={comment}/>\n          </Card.Body>\n        </Card>\n      )})\n      return <div>{rows}</div>\n  }\n\n  function ListingInvites() {\n    let score = new Map()\n    score[\"yes\"] = 0\n    score[\"no\"] = 0\n    score[\"maybe\"] = 0\n    var your_response;\n    var invite_id;\n    let rows = invites.map((invite) => {\n      if (invite.response == \"No\") {\n        score[\"no\"] = score[\"no\"] + 1\n      }\n      else if(invite.response == \"Yes\") {\n        score[\"yes\"] = score[\"yes\"] + 1\n      }\n      else {\n        score[\"maybe\"] = score[\"maybe\"] + 1\n      }\n\n      if (invite.user_id == session.user_id) {\n        your_response = invite.response;\n        invite_id = invite.id;\n      }\n      return(\n        <div>{invite.user.email}</div>\n      )\n    })\n\n    const [response, setResponse] = useState(your_response);\n\n    function updateInvite(ev) {\n      update_invite(response, session.user_id, event_form.id, invite_id).then((data) => {\n          if(data.error) {\n            let action={\n              type:\"error/set\",\n              data: data.error\n            }\n            store.dispatch(action)\n          }\n          else {\n            fetch_invites(event_id)\n            fetch_events()\n          }\n      });\n    }\n\n    const [email, setEmail] = useState(\"\");\n\n    function containEmail(email) {\n      var found = false\n      for(var i = 0; i < invites.length; i++) {\n        if(invites[i].user.email == email) {\n          found = true;\n          break\n        }\n      }\n      return found\n    }\n\n    function createInvite(ev) {\n      if (email != session.email && !containEmail(email)) {\n          create_invite(email, event_id).then((data) => {\n              if(data.error) {\n                let action={\n                  type:\"error/set\",\n                  data: data.error\n                }\n                store.dispatch(action)\n              }\n              else {\n                fetch_invites(event_id)\n                fetch_events()\n              }\n          });\n      }\n      else {\n        setEmail(\"\")\n      }\n    }\n\n    if(session.user_id == user_form.id) {\n      return (\n        <div className=\"h3 mt-5\">\n          <Form  onSubmit={createInvite} className=\"my-3\">\n            <Form.Row>\n              <Col><h3>Invite</h3></Col>\n              <Col xs={10}>\n                <Form.Control type=\"text\" onChange={(ev) => setEmail(ev.target.value)}\n                  value={email} />\n              </Col>\n              <Col>\n                <Button onClick={(ev) => createInvite(ev)} className=\"btn btn-info text-light font-weight-bold\">Submit</Button>\n              </Col>\n            </Form.Row>\n          </Form>\n          <div>{rows}</div>\n          <div className=\"text-info\">Yes: {score[\"yes\"]} No: {score[\"no\"]} Maybe: {score[\"maybe\"]} </div>\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className=\"h3 mt-5\">\n          <Form onSubmit={updateInvite} inline>\n            <div className=\"text-info mr-5 mt-3 my-3\">Yes: {score[\"yes\"]} No: {score[\"no\"]} Maybe: {score[\"maybe\"]} </div>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Control as=\"select\" onChange={(ev) => setResponse(ev.target.value)} value={response}>\n              <option></option>\n              <option>Yes</option>\n              <option>No</option>\n              <option>Maybe</option>\n            </Form.Control>\n          </Form.Group>\n          <Button onClick={(ev) => updateInvite(ev)} className=\"btn btn-info text-light font-weight-bold\">Submit</Button>\n          </Form>\n        </div>\n      )\n    }\n  }\n\n    const [com, setCom] = useState(\"\");\n\n    function onSubmit(ev) {\n      create_comment(com, session.user_id, event_id).then((data) => {\n          if(data.error) {\n            let action={\n              type:\"error/set\",\n              data: data.error\n            }\n            store.dispatch(action)\n          }\n          else {\n            setCom(\"\")\n            fetch_comments(event_id)\n            fetch_events()\n          }\n      });\n    }\n\n\n    if (session) {\n      return(\n        <div>\n          <AddButtons/>\n          <div class=\"row\">\n            <div class=\"col\">\n              <h1 className=\"display-3\">{event_form.name}</h1>\n              <h1 className=\"h4 text-secondary\">Posted By: {user_form.name}</h1>\n              <h1 className=\"h4 text-secondary\">{event_form.date}</h1>\n              <p className=\"h3 mt-2 text-dark\">{event_form.description}</p>\n              <ListingInvites />\n              <h1 className=\"text-dark mt-5\">Comments</h1>\n              <Form  onSubmit={onSubmit} className=\"my-3\">\n                <Form.Row>\n                  <Col><h3>{session.name}</h3></Col>\n                  <Col xs={10}>\n                    <Form.Control type=\"text\" onChange={(ev) => setCom(ev.target.value)}\n                      value={com} />\n                  </Col>\n                  <Col>\n                    <Button onClick={(ev) => onSubmit(ev)} className=\"btn btn-info text-light font-weight-bold\">Submit</Button>\n                  </Col>\n                </Form.Row>\n              </Form>\n              <ListingComments/>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else {\n      return(\n        <div>\n          <AddButtons/>\n          <h1 className=\"h4 text-secondary\">Posted by: {user_form.name}</h1>\n          <div class=\"row\">\n            <div class=\"col\">\n              <h1 className=\"display-3\">{event_form.brand}</h1>\n              <h1 className=\"h3\">Price</h1>\n              <p className=\"h5 mt-2 text-danger\">{event_form.price}$ per Lbs</p>\n              <h1 className=\"h3\">Type</h1>\n              <p className=\"h5 mt-2 text-secondary\">{event_form.type}</p>\n              <h1 className=\"h3\">Description</h1>\n              <p className=\"h5 mt-2 text-secondary\">{event_form.body}</p>\n              <ListingComments/>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\nfunction state2props({session, event_form, user_form, comments, invites}) {\n  return {session, event_form, user_form, comments, invites};\n}\n\nexport default connect(state2props)(EventView);\n"]},"metadata":{},"sourceType":"module"}
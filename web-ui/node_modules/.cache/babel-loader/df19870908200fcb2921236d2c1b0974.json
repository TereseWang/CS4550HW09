{"ast":null,"code":"var _jsxFileName = \"/media/psf/Home/Desktop/CS4550HW09/web-ui/src/User/New.js\",\n    _s = $RefreshSig$();\n\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_user, fetch_users, api_login, fetch_reason } from '../api'; //referenced from lecture code SPA Structure from Nat Tuck CS4550 Northeastern University\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsersNew() {\n  _s();\n\n  let history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\",\n    pass1: \"\",\n    pass2: \"\"\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['name', 'email', 'password']);\n    create_user(data).then(data => {\n      if (data.error) {\n        let action = {\n          type: \"error/set\",\n          data: data.error\n        };\n        store.dispatch(action);\n      } else {\n        fetch_users();\n        api_login(user['email'], user['password']);\n        history.push(\"/\");\n      }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    // This is for user experience only,\n    // validation logic goes on the server.\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  if (session) {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mt-5\",\n          children: \"Register Acount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: ev => update(\"name\", ev),\n          value: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: ev => update(\"email\", ev),\n          value: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: ev => update(\"pass1\", ev),\n          value: user.pass1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.pass_msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: ev => update(\"pass2\", ev),\n          value: user.pass2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"h3 font-weight-bold\",\n        disabled: user.pass_msg !== \"\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log in first\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(UsersNew, \"DNgHuLDTOXGy7UvrOG2la/3bfNc=\", false, function () {\n  return [useHistory];\n});\n\n_c = UsersNew;\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersNew);\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersNew\");","map":{"version":3,"sources":["/media/psf/Home/Desktop/CS4550HW09/web-ui/src/User/New.js"],"names":["Row","Col","Form","Button","connect","useState","useHistory","pick","store","create_user","fetch_users","api_login","fetch_reason","UsersNew","history","user","setUser","name","pass1","pass2","onSubmit","ev","preventDefault","data","then","error","action","type","dispatch","push","check_pass","p1","p2","length","update","field","u1","Object","assign","target","value","password","pass_msg","updatePhoto","files","session","email","state2props","_state"],"mappings":"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","sourcesContent":["import { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_user, fetch_users, api_login, fetch_reason } from '../api';\n\n//referenced from lecture code SPA Structure from Nat Tuck CS4550 Northeastern University\nfunction UsersNew() {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\", pass1: \"\", pass2: \"\",\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['name', 'email', 'password']);\n    create_user(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_users();\n          api_login(user['email'], user['password'])\n          history.push(\"/\")\n        }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    // This is for user experience only,\n    // validation logic goes on the server.\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  if(session) {\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Group>\n        <h1 className=\"mt-5\">Register Acount</h1>\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"name\", ev)}\n          value={user.name} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"email\", ev)}\n          value={user.email} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass1\", ev)}\n          value={user.pass1} />\n        <p>{user.pass_msg}</p>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass2\", ev)}\n          value={user.pass2} />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold\"\n              disabled={user.pass_msg !== \"\"}>\n        Save\n      </Button>\n    </Form>\n  );}\n  else {\n    return <h1>Log in first</h1>\n  }\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersNew);\n"]},"metadata":{},"sourceType":"module"}
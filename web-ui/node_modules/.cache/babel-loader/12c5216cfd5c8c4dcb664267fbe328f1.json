{"ast":null,"code":"import _slicedToArray from\"/media/psf/Home/Desktop/CS4550HW09/web-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Row,Col,Form,Button}from'react-bootstrap';import{connect}from'react-redux';import{useState}from'react';import{useHistory,NavLink}from'react-router-dom';import pick from'lodash/pick';import store from'../store';import{create_event,fetch_events,fetch_users}from'../api';import Datetime from'react-datetime';import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EventNew(_ref){var session=_ref.session;var history=useHistory();var _useState=useState({user_id:\"\",name:\"\",description:\"\",date:\"\",type:\"\"}),_useState2=_slicedToArray(_useState,2),event=_useState2[0],setEvent=_useState2[1];function onSubmit(ev){ev.preventDefault();event['user_id']=session.user_id;var data=pick(event,['user_id','name','description','date']);create_event(data).then(function(data){if(data.error){var action={type:\"error/set\",data:data.error};store.dispatch(action);}else{fetch_events();fetch_users();history.push(\"/\");}});}function update(field,ev){var u1=Object.assign({},event);u1[field]=ev.target.value;setEvent(u1);}function updateDate(date){var newEvent=Object.assign({},event);newEvent[\"date\"]=date;setEvent(newEvent);}if(session){return/*#__PURE__*/_jsxs(Form,{onSubmit:onSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mt-5\",children:\"Create Event\"}),/*#__PURE__*/_jsx(Form.Label,{children:\"Event Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",onChange:function onChange(ev){return update(\"name\",ev);},value:event.name})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Date\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Datetime,{value:event.date,onChange:function onChange(value){return updateDate(value);},dateFormat:\"YYYY-MM-DD\",timeFormat:\"HH:mm:SS\",className:\"mb-4 max-width-300\",inputProps:{value:event.date?moment(event.date).format('MMMM D, YYYY   h:mm a'):''}})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Event Description\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",onChange:function onChange(ev){return update(\"description\",ev);},value:event.description})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",className:\"h3 font-weight-bold mr-3\",children:\"Save\"})]});}else{return/*#__PURE__*/_jsx(\"h1\",{children:\"Log in to create event\"});}}function state2props(_ref2){var session=_ref2.session;return{session:session};}export default connect(state2props)(EventNew);","map":{"version":3,"sources":["/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/New.js"],"names":["Row","Col","Form","Button","connect","useState","useHistory","NavLink","pick","store","create_event","fetch_events","fetch_users","Datetime","moment","EventNew","session","history","user_id","name","description","date","type","event","setEvent","onSubmit","ev","preventDefault","data","then","error","action","dispatch","push","update","field","u1","Object","assign","target","value","updateDate","newEvent","format","state2props"],"mappings":"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","sourcesContent":["import { Row, Col, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_event , fetch_events, fetch_users } from '../api';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\n\nfunction EventNew({session}) {\n  let history = useHistory();\n  const [event, setEvent] = useState({\n    user_id: \"\", name: \"\", description: \"\", date: \"\",\n    type: \"\"\n  })\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    event['user_id'] = session.user_id;\n    let data = pick(event, ['user_id', 'name', 'description', 'date']);\n    create_event(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_events()\n          fetch_users()\n          history.push(\"/\")\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, event);\n    u1[field] = ev.target.value;\n    setEvent(u1);\n  }\n\n  function updateDate(date) {\n    let newEvent = Object.assign({}, event);\n    newEvent[\"date\"] = date;\n    setEvent(newEvent);\n  }\n\n  if (session) {\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Create Event</h1>\n          <Form.Label>Event Name</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"name\", ev)}\n            value={event.name} />\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Date</Form.Label>\n            <br></br>\n            <Datetime\n              value={event.date}\n              onChange={(value) => updateDate(value)}\n              dateFormat=\"YYYY-MM-DD\"\n              timeFormat=\"HH:mm:SS\"\n              className=\"mb-4 max-width-300\"\n              inputProps={{\n              value: event.date\n              ? moment(event.date).format('MMMM D, YYYY   h:mm a')\n              : '',\n          }}\n        />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Event Description</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"description\", ev)}\n            value={event.description} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n      </Form>\n    );\n  }\n  else {\n    return <h1>Log in to create event</h1>\n  }\n}\n\nfunction state2props({session}) {\n  return {session};\n}\n\nexport default connect(state2props)(EventNew);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createStore, combineReducers } from 'redux'; //referenced the fetch Structure that store the value of the web from lecture\n//code SPA Structure from Nat Tuck CS4550 Northeastern University\n\nfunction users(state = [], action) {\n  switch (action.type) {\n    case 'users/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction user_form(state = {}, action) {\n  switch (action.type) {\n    case 'user_form/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction events(state = [], action) {\n  switch (action.type) {\n    case 'events/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction event_form(state = {}, action) {\n  switch (action.type) {\n    case 'event_form/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction session(state = load_session(), action) {\n  switch (action.type) {\n    case 'session/set':\n      save_session(action.data);\n      return action.data;\n\n    case 'session/clear':\n      delete_session();\n      return null;\n\n    default:\n      return state;\n  }\n}\n\nfunction save_session(sess) {\n  let session = Object.assign({}, sess, {\n    time: Date.now()\n  });\n  localStorage.setItem(\"session\", JSON.stringify(session));\n}\n\nfunction delete_session() {\n  localStorage.removeItem(\"session\");\n}\n\nfunction load_session() {\n  let session = localStorage.getItem(\"session\");\n\n  if (!session) {\n    return null;\n  }\n\n  session = JSON.parse(session);\n  let age = Date.now() - session.time;\n  let hours = 60 * 60 * 1000;\n\n  if (age < 24 * hours) {\n    return session;\n  } else {\n    return null;\n  }\n}\n\nfunction error(state = null, action) {\n  switch (action.type) {\n    case 'error/set':\n      return action.data;\n\n    case 'session/set':\n      return null;\n\n    default:\n      return state;\n  }\n}\n\nfunction comments(state = [], action) {\n  switch (action.type) {\n    case 'comments/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction root_reducer(state, action) {\n  let reducer = combineReducers({\n    comments,\n    events,\n    event_form,\n    users,\n    user_form,\n    session,\n    error\n  });\n  return reducer(state, action);\n}\n\nlet store = createStore(root_reducer);\nexport default store;","map":{"version":3,"sources":["/media/psf/Home/Desktop/CS4550HW09/web-ui/src/store.js"],"names":["createStore","combineReducers","users","state","action","type","data","user_form","events","event_form","session","load_session","save_session","delete_session","sess","Object","assign","time","Date","now","localStorage","setItem","JSON","stringify","removeItem","getItem","parse","age","hours","error","comments","root_reducer","reducer","store"],"mappings":"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","sourcesContent":["import { createStore, combineReducers } from 'redux';\n//referenced the fetch Structure that store the value of the web from lecture\n//code SPA Structure from Nat Tuck CS4550 Northeastern University\n\nfunction users(state = [], action) {\n  switch (action.type) {\n    case 'users/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction user_form(state = {}, action) {\n  switch (action.type) {\n    case 'user_form/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction events(state=[], action) {\n  switch (action.type) {\n    case 'events/set':\n      return action.data;\n    default:\n      return state;\n    }\n}\n\nfunction event_form(state={}, action) {\n  switch (action.type) {\n    case 'event_form/set':\n      return action.data;\n    default:\n      return state;\n    }\n}\n\nfunction session(state = load_session(), action) {\n  switch (action.type) {\n    case 'session/set':\n      save_session(action.data);\n      return action.data;\n    case 'session/clear':\n      delete_session();\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction save_session(sess) {\n  let session = Object.assign({}, sess, {time: Date.now()});\n  localStorage.setItem(\"session\", JSON.stringify(session));\n}\n\nfunction delete_session() {\n  localStorage.removeItem(\"session\");\n}\n\nfunction load_session() {\n  let session = localStorage.getItem(\"session\");\n  if (!session) {\n    return null;\n  }\n  session = JSON.parse(session);\n  let age = Date.now() - session.time;\n  let hours = 60*60*1000;\n  if (age < 24 * hours) {\n    return session;\n  }\n  else {\n    return null;\n  }\n}\n\nfunction error(state = null, action) {\n  switch (action.type) {\n    case 'error/set':\n      return action.data;\n    case 'session/set':\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction comments(state=[], action) {\n  switch (action.type) {\n    case 'comments/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction root_reducer(state, action) {\n    let reducer = combineReducers({\n        comments, events, event_form, users, user_form, session, error,\n    });\n    return reducer(state, action);\n}\n\nlet store = createStore(root_reducer);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}
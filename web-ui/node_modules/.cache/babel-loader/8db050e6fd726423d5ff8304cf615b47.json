{"ast":null,"code":"var _jsxFileName = \"/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/Edit.js\",\n    _s = $RefreshSig$();\n\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink, useLocation } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_event, fetch_events, fetch_users, fetch_user, fetch_event } from '../api';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventEdit({\n  session,\n  user_form,\n  event_form\n}) {\n  _s();\n\n  let history = useHistory();\n  let location = useLocation();\n  let event_id = location.pathname.split(\"/events/edit/\")[1];\n\n  if (typeof event_form.id == \"undefined\" || event_form.id != event_id) {\n    fetch_events();\n    fetch_event(event_id);\n  }\n\n  if (typeof event_form.id == \"undefined\" || user_form.id != event_form.user_id) {\n    fetch_events();\n    fetch_user(event_form.user_id);\n  }\n\n  const [event, setEvent] = useState({\n    user_id: \"\",\n    name: event_form.name,\n    description: event_form.description,\n    date: event_form.date,\n    id: event_form.id\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    event['user_id'] = session.user_id;\n    let data = pick(event, ['user_id', 'name', 'description', 'date', 'id']);\n    update_event(data).then(data => {\n      if (data.error) {\n        let action = {\n          type: \"error/set\",\n          data: data.error\n        };\n        store.dispatch(action);\n      } else {\n        fetch_events();\n        fetch_users();\n        fetch_event(event_id);\n        history.push(\"/events/view/\" + event_id);\n      }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, event);\n    u1[field] = ev.target.value;\n    setEvent(u1);\n  }\n\n  function updateDate(date) {\n    let newEvent = Object.assign({}, event);\n    newEvent[\"date\"] = date;\n    setEvent(newEvent);\n  }\n\n  if (session) {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mt-5\",\n          children: \"Edit Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Event Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: ev => update(\"name\", ev),\n          value: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Datetime, {\n          value: event.date,\n          onChange: value => updateDate(value),\n          dateFormat: \"YYYY-MM-DD\",\n          timeFormat: \"HH:mm:SS\",\n          className: \"mb-4 max-width-300\",\n          inputProps: {\n            value: event.date ? moment(event.date).format('MMMM D, YYYY   h:mm a') : ''\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Event Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: ev => update(\"description\", ev),\n          value: event.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"h3 font-weight-bold mr-3\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log in to edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(EventEdit, \"P/Odg0dL6fxxehIis8Yw4ty+Ts0=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = EventEdit;\n\nfunction state2props({\n  session,\n  user_form,\n  event_form\n}) {\n  return {\n    session,\n    user_form,\n    event_form\n  };\n}\n\nexport default connect(state2props)(EventEdit);\n\nvar _c;\n\n$RefreshReg$(_c, \"EventEdit\");","map":{"version":3,"sources":["/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/Edit.js"],"names":["Row","Col","Form","Button","connect","useState","useHistory","NavLink","useLocation","pick","store","update_event","fetch_events","fetch_users","fetch_user","fetch_event","Datetime","moment","EventEdit","session","user_form","event_form","history","location","event_id","pathname","split","id","user_id","event","setEvent","name","description","date","onSubmit","ev","preventDefault","data","then","error","action","type","dispatch","push","update","field","u1","Object","assign","target","value","updateDate","newEvent","format","state2props"],"mappings":"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","sourcesContent":["import { Row, Col, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink, useLocation } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_event , fetch_events, fetch_users, fetch_user, fetch_event} from '../api';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\n\nfunction EventEdit({session, user_form, event_form}) {\n  let history = useHistory();\n  let location = useLocation();\n  let event_id = location.pathname.split(\"/events/edit/\")[1]\n\n  if(typeof(event_form.id) == \"undefined\" || event_form.id != event_id) {\n    fetch_events()\n    fetch_event(event_id)\n  }\n\n  if(typeof(event_form.id) == \"undefined\" || user_form.id != event_form.user_id){\n    fetch_events()\n    fetch_user(event_form.user_id)\n  }\n\n  const [event, setEvent] = useState({\n    user_id: \"\", name: event_form.name, description: event_form.description, date: event_form.date, id: event_form.id\n  })\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    event['user_id'] = session.user_id;\n    let data = pick(event, ['user_id', 'name', 'description', 'date', 'id']);\n    update_event(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_events()\n          fetch_users()\n          fetch_event(event_id)\n          history.push(\"/events/view/\" + event_id)\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, event);\n    u1[field] = ev.target.value;\n    setEvent(u1);\n  }\n\n  function updateDate(date) {\n    let newEvent = Object.assign({}, event);\n    newEvent[\"date\"] = date;\n    setEvent(newEvent);\n  }\n\n  if(session) {\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Edit Event</h1>\n          <Form.Label>Event Name</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"name\", ev)}\n            value={event.name} />\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Date</Form.Label>\n            <br></br>\n            <Datetime\n              value={event.date}\n              onChange={(value) => updateDate(value)}\n              dateFormat=\"YYYY-MM-DD\"\n              timeFormat=\"HH:mm:SS\"\n              className=\"mb-4 max-width-300\"\n              inputProps={{\n              value: event.date\n              ? moment(event.date).format('MMMM D, YYYY   h:mm a')\n              : '',\n          }}\n        />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Event Description</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"description\", ev)}\n            value={event.description} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n      </Form>\n    );\n  }\n  else {\n    return <h1>Log in to edit</h1>\n  }\n}\n\nfunction state2props({session, user_form, event_form}) {\n  return {session, user_form, event_form};\n}\n\nexport default connect(state2props)(EventEdit);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/New.js\",\n    _s = $RefreshSig$();\n\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_event, fetch_events, fetch_users } from '../api';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventNew({\n  session\n}) {\n  _s();\n\n  if (session) {\n    let history = useHistory();\n    const [event, setEvent] = useState({\n      user_id: session.user_id,\n      name: \"\",\n      description: \"\",\n      date: \"\",\n      type: \"\"\n    });\n\n    function onSubmit(ev) {\n      ev.preventDefault();\n      let data = pick(event, ['user_id', 'name', 'description', 'date']);\n      create_event(data).then(data => {\n        if (data.error) {\n          let action = {\n            type: \"error/set\",\n            data: data.error\n          };\n          store.dispatch(action);\n        } else {\n          fetch_events();\n          fetch_users();\n          history.push(\"/\");\n        }\n      });\n    }\n\n    function update(field, ev) {\n      let u1 = Object.assign({}, event);\n      u1[field] = ev.target.value;\n      setEvent(u1);\n    }\n\n    function updateDate(date) {\n      let newEvent = Object.assign({}, event);\n      newEvent[\"date\"] = date;\n      setEvent(newEvent);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mt-5\",\n          children: \"Create Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Event Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: ev => update(\"name\", ev),\n          value: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Datetime, {\n          value: event.date,\n          onChange: value => updateDate(value),\n          dateFormat: \"YYYY-MM-DD\",\n          timeFormat: \"HH:mm:SS\",\n          className: \"mb-4 max-width-300\",\n          inputProps: {\n            value: event.date ? moment(event.date).format('MMMM D, YYYY   h:mm a') : ''\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Event Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: ev => update(\"description\", ev),\n          value: event.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"h3 font-weight-bold mr-3\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log in to create event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(EventNew, \"mo4BdUelhFev+xrZnlip4N5p4tI=\", false, function () {\n  return [useHistory];\n});\n\n_c = EventNew;\n\nfunction state2props({\n  session\n}) {\n  return {\n    session\n  };\n}\n\nexport default connect(state2props)(EventNew);\n\nvar _c;\n\n$RefreshReg$(_c, \"EventNew\");","map":{"version":3,"sources":["/media/psf/Home/Desktop/CS4550HW09/web-ui/src/Event/New.js"],"names":["Row","Col","Form","Button","connect","useState","useHistory","NavLink","pick","store","create_event","fetch_events","fetch_users","Datetime","moment","EventNew","session","history","event","setEvent","user_id","name","description","date","type","onSubmit","ev","preventDefault","data","then","error","action","dispatch","push","update","field","u1","Object","assign","target","value","updateDate","newEvent","format","state2props"],"mappings":"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","sourcesContent":["import { Row, Col, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_event , fetch_events, fetch_users } from '../api';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\n\nfunction EventNew({session}) {\n  if (session) {\n  let history = useHistory();\n  const [event, setEvent] = useState({\n    user_id: session.user_id, name: \"\", description: \"\", date: \"\",\n    type: \"\"\n  })\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(event, ['user_id', 'name', 'description', 'date']);\n    create_event(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_events()\n          fetch_users()\n          history.push(\"/\")\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, event);\n    u1[field] = ev.target.value;\n    setEvent(u1);\n  }\n\n  function updateDate(date) {\n    let newEvent = Object.assign({}, event);\n    newEvent[\"date\"] = date;\n    setEvent(newEvent);\n  }\n\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Create Event</h1>\n          <Form.Label>Event Name</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"name\", ev)}\n            value={event.name} />\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Date</Form.Label>\n            <br></br>\n            <Datetime\n              value={event.date}\n              onChange={(value) => updateDate(value)}\n              dateFormat=\"YYYY-MM-DD\"\n              timeFormat=\"HH:mm:SS\"\n              className=\"mb-4 max-width-300\"\n              inputProps={{\n              value: event.date\n              ? moment(event.date).format('MMMM D, YYYY   h:mm a')\n              : '',\n          }}\n        />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Event Description</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"description\", ev)}\n            value={event.description} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n      </Form>\n    );\n  }\n  else {\n    return <h1>Log in to create event</h1>\n  }\n}\n\nfunction state2props({session}) {\n  return {session};\n}\n\nexport default connect(state2props)(EventNew);\n"]},"metadata":{},"sourceType":"module"}